{"version":3,"sources":["webpack://projectstorm/react-canvas-core/webpack/universalModuleDefinition","webpack://projectstorm/react-canvas-core/./src/CanvasEngine.ts","webpack://projectstorm/react-canvas-core/./src/Toolkit.ts","webpack://projectstorm/react-canvas-core/./src/actions/DeleteItemsAction.ts","webpack://projectstorm/react-canvas-core/./src/actions/ZoomCanvasAction.ts","webpack://projectstorm/react-canvas-core/./src/core-actions/Action.ts","webpack://projectstorm/react-canvas-core/./src/core-actions/ActionEventBus.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BaseEntity.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BaseModel.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BasePositionModel.ts","webpack://projectstorm/react-canvas-core/./src/core-state/AbstractDisplacementState.ts","webpack://projectstorm/react-canvas-core/./src/core-state/State.ts","webpack://projectstorm/react-canvas-core/./src/core-state/StateMachine.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractFactory.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractModelFactory.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractReactFactory.tsx","webpack://projectstorm/react-canvas-core/./src/core/BaseObserver.ts","webpack://projectstorm/react-canvas-core/./src/core/FactoryBank.ts","webpack://projectstorm/react-canvas-core/./src/entities/canvas/CanvasModel.ts","webpack://projectstorm/react-canvas-core/./src/entities/canvas/CanvasWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/layer/LayerModel.ts","webpack://projectstorm/react-canvas-core/./src/entities/layer/SmartLayerWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/layer/TransformLayerWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionBoxLayerFactory.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionBoxWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionLayerModel.ts","webpack://projectstorm/react-canvas-core/./src/index.ts","webpack://projectstorm/react-canvas-core/./src/states/DefaultState.ts","webpack://projectstorm/react-canvas-core/./src/states/DragCanvasState.ts","webpack://projectstorm/react-canvas-core/./src/states/MoveItemsState.ts","webpack://projectstorm/react-canvas-core/./src/states/SelectingState.ts","webpack://projectstorm/react-canvas-core/./src/states/SelectionBoxState.ts","webpack://projectstorm/react-canvas-core/./src/widgets/PeformanceWidget.tsx","webpack://projectstorm/react-canvas-core/external \"@emotion/react\"","webpack://projectstorm/react-canvas-core/external \"@emotion/styled\"","webpack://projectstorm/react-canvas-core/external \"@projectstorm/geometry\"","webpack://projectstorm/react-canvas-core/external \"lodash\"","webpack://projectstorm/react-canvas-core/external \"react\"","webpack://projectstorm/react-canvas-core/webpack/bootstrap","webpack://projectstorm/react-canvas-core/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","CanvasEngine","BaseObserver","constructor","options","super","this","model","eventBus","ActionEventBus","stateMachine","StateMachine","layerFactories","FactoryBank","registerFactoryBank","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","repaintDebounceMs","registerAction","ZoomCanvasAction","DeleteItemsAction","getStateMachine","getRelativeMousePoint","event","point","getRelativePoint","clientX","clientY","Point","x","getOffsetX","getZoomLevel","y","getOffsetY","canvasRect","canvas","getBoundingClientRect","left","top","registerListener","factoryAdded","setDiagramEngine","factoryRemoved","getActionEventBus","getLayerFactories","getFactoryForLayer","layer","getFactory","getType","setModel","requestAnimationFrame","repaintCanvas","getModel","promise","repaint","iterateListeners","listener","repaintFn","debounce","Promise","resolve","l","rendered","deregister","setCanvas","fireEvent","getCanvas","getMouseElement","zoomToFit","xFactor","clientWidth","scrollWidth","yFactor","clientHeight","scrollHeight","zoomFactor","setZoomLevel","setOffset","Toolkit","TESTING","TESTING_UID","replace","c","r","Math","random","toString","element","selector","Element","prototype","closest","s","el","matches","call","parentElement","parentNode","nodeType","Action","keyCodes","modifiers","ctrlKey","shiftKey","altKey","metaKey","type","InputType","KEY_DOWN","fire","keyCode","indexOf","_","isEqual","forEach","engine","getSelectedEntities","isLocked","remove","MOUSE_WHEEL","actionEvent","getLayers","allowRepaint","stopPropagation","oldZoomFactor","scrollDelta","inverseZoom","deltaY","boundingRect","currentTarget","width","height","widthDiff","heightDiff","id","UID","setEngine","actions","keys","getKeys","action","deregisterAction","getActionsForType","filter","getModelForEvent","getActionsForEvent","MOUSE_DOWN","MOUSE_UP","key","toLowerCase","KEY_UP","MOUSE_MOVE","TOUCH_START","TOUCH_END","TOUCH_MOVE","fireAction","BaseEntity","getOptions","getID","doClone","lookupTable","clone","cloneDeep","clearListeners","listeners","deserialize","data","locked","serialize","k","entity","setLocked","BaseModel","performanceTune","getParentCanvasModel","parent","CanvasModel","getParent","setParent","getSelectionEntities","selected","extras","isSelected","setSelected","BasePositionModel","position","setPosition","getBoundingBox","Rectangle","getPosition","getX","getY","AbstractDisplacementState","State","handleMoveStart","buttons","eject","handleMove","handleMoveEnd","touches","initialX","initialY","rel","initialXRelative","initialYRelative","fireMouseMoved","displacementX","displacementY","virtualDisplacementX","virtualDisplacementY","childStates","popState","transitionWithEvent","state","pushState","push","tryActivateParentState","length","isKeysFullfilled","tryActivateChildState","findStateToActivate","child","intersection","activated","previous","handler1","handler2","deactivated","next","stateStack","getCurrentState","currentState","setState","pop","last","old","newState","setFactoryBank","bank","AbstractModelFactory","AbstractFactory","AbstractReactFactory","fireEventInternal","firing","function","cb","getListenerHandle","deregisterListener","handle","factories","getFactories","values","clearFactories","deregisterFactory","Error","registerFactory","zoom","gridSize","offsetX","offsetY","layers","flatMap","ob","clearSelection","getModels","addLayer","entityRemoved","removeLayer","index","splice","setGridSize","size","getGridPosition","pos","floor","deserializeModel","models","promises","resolvers","registerModel","layerOb","generateModel","initialConfig","map","setOffsetX","setOffsetY","S","Canvas","div","CanvasWidget","React","Component","props","ref","createRef","diagramEngineListener","componentWillUnmount","canvasListener","document","removeEventListener","keyUp","keyDown","registerCanvas","current","list","componentDidUpdate","componentDidMount","forceUpdate","addEventListener","render","className","onWheel","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","TransformLayerWidget","SmartLayerWidget","LayerModel","repaintEnabled","isSvg","transformed","modelOb","getChildModelFactoryBank","addModel","mapValues","isRepaintEnabled","allow","removeModel","_id","shouldComponentUpdate","generateReactWidget","shared","css","DivLayer","SvgLayer","svg","getTransform","getTransformStyle","transform","style","children","SelectionBoxLayerFactory","SelectionLayerModel","SelectionBoxWidget","rect","box","Container","setBox","DefaultState","name","SelectingState","MoveItemsState","DragCanvasState","config","allowDrag","prev","initialCanvasX","initialCanvasY","initialPositions","items","item","SelectionBoxState","getBoxDimensions","touch","abs","right","bottom","relative","bounds","containsPoint","getTopLeft","getBottomRight","PeformanceWidget","nextProps","nextState","nextContext","serialized","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,kCAAoCD,IAE5CD,EAAK,kCAAoCC,IAR3C,CASGK,MAAM,WACT,M,+GCVA,eAEA,SAGA,SAGA,SACA,SACA,SACA,SACA,SAsBA,MAAaC,UAGH,EAAAC,aAQTC,YAAYC,EAA+B,IAC1CC,QACAC,KAAKC,MAAQ,KACbD,KAAKE,SAAW,IAAI,EAAAC,eAAeH,MACnCA,KAAKI,aAAe,IAAI,EAAAC,aAAaL,MACrCA,KAAKM,eAAiB,IAAI,EAAAC,YAC1BP,KAAKQ,oBAAoBR,KAAKM,gBAK9BN,KAAKF,QAAU,OAAH,QACXW,kCAAkC,EAClCC,iCAAiC,EACjCC,kBAAmB,GAChBb,IAEiD,IAAjDE,KAAKF,QAAQY,iCAChBV,KAAKE,SAASU,eAAe,IAAI,EAAAC,mBAEoB,IAAlDb,KAAKF,QAAQW,kCAChBT,KAAKE,SAASU,eAAe,IAAI,EAAAE,mBAInCC,kBACC,OAAOf,KAAKI,aAGbY,sBAAsBC,GACrB,MAAMC,EAAQlB,KAAKmB,iBAAiBF,EAAMG,QAASH,EAAMI,SACzD,OAAO,IAAI,EAAAC,OACTJ,EAAMK,EAAIvB,KAAKC,MAAMuB,eAAiBxB,KAAKC,MAAMwB,eAAiB,MAClEP,EAAMQ,EAAI1B,KAAKC,MAAM0B,eAAiB3B,KAAKC,MAAMwB,eAAiB,MAIrEN,iBAAiBI,EAAGG,GACnB,MAAME,EAAa5B,KAAK6B,OAAOC,wBAC/B,OAAO,IAAI,EAAAR,MAAMC,EAAIK,EAAWG,KAAML,EAAIE,EAAWI,KAGtDxB,oBAAoBnB,GACnBA,EAAQ4C,iBAAiB,CACxBC,aAAejB,IACdA,EAAM5B,QAAQ8C,iBAAiBnC,OAEhCoC,eAAiBnB,IAChBA,EAAM5B,QAAQ8C,iBAAiB,SAKlCE,oBACC,OAAOrC,KAAKE,SAGboC,oBACC,OAAOtC,KAAKM,eAGbiC,mBAA+DC,GAC9D,MAAqB,iBAAVA,EACHxC,KAAKM,eAAemC,WAAWD,GAEhCxC,KAAKM,eAAemC,WAAWD,EAAME,WAG7CC,SAAS1C,GACRD,KAAKC,MAAQA,EACTD,KAAK6B,QACRe,uBAAsB,KACrB5C,KAAK6C,mBAKRC,WACC,OAAO9C,KAAKC,MAKb4C,cAAcE,GACb,MAAM,kBAAEpC,GAAsBX,KAAKF,QAK7BkD,EAAU,KACfhD,KAAKiD,kBAAkBC,IAClBA,EAASL,eACZK,EAASL,oBAMZ,IAAIM,EAAYH,EAMhB,GAJIrC,EAAoB,IACvBwC,EAAY,EAAAC,SAASJ,EAASrC,IAG3BoC,EACH,OAAO,IAAIM,SAAeC,IACzB,MAAMC,EAAIvD,KAAKiC,iBAAiB,CAC/BuB,SAAU,KACTF,IACAC,EAAEE,gBAGJN,OAIFA,IAGDO,UAAU7B,GACL7B,KAAK6B,SAAWA,IACnB7B,KAAK6B,OAASA,EACVA,GACH7B,KAAK2D,UAAU,GAAI,gBAKtBC,YACC,OAAO5D,KAAK6B,OAGbgC,gBAAgB5C,GACf,OAAO,KAGR6C,YACC,MAAMC,EAAU/D,KAAK6B,OAAOmC,YAAchE,KAAK6B,OAAOoC,YAChDC,EAAUlE,KAAK6B,OAAOsC,aAAenE,KAAK6B,OAAOuC,aACjDC,EAAaN,EAAUG,EAAUH,EAAUG,EAEjDlE,KAAKC,MAAMqE,aAAatE,KAAKC,MAAMwB,eAAiB4C,GACpDrE,KAAKC,MAAMsE,UAAU,EAAG,GACxBvE,KAAK6C,iBA1JP,kB,8EClCA,MAAa2B,EAQL,aACN,OAAIA,EAAQC,SACXD,EAAQE,cACD,GAAGF,EAAQE,eAEZ,uCAAuCC,QAAQ,SAAUC,IAC/D,MAAMC,EAAqB,GAAhBC,KAAKC,SAAiB,EAEjC,OADgB,MAANH,EAAYC,EAAS,EAAJA,EAAW,GAC7BG,SAAS,OAIb,eAAeC,EAAkBC,GAYvC,OAXKC,QAAQC,UAAUC,UACtBF,QAAQC,UAAUC,QAAU,SAASC,GACpC,IAAIC,EAAKvF,KAET,EAAG,CACF,GAAImF,QAAQC,UAAUI,QAAQC,KAAKF,EAAID,GAAI,OAAOC,EAClDA,EAAKA,EAAGG,eAAiBH,EAAGI,iBACb,OAAPJ,GAA+B,IAAhBA,EAAGK,UAC3B,OAAO,OAGFX,EAAQI,QAAQH,IAhCzB,YACQ,EAAAT,SAAmB,EACnB,EAAAC,YAAc,G,0FCFtB,eAEA,SAeA,MAAa5D,UAA0B,EAAA+E,OACtChG,YAAYC,EAAoC,IAC/C,MAAMgG,EAAWhG,EAAQgG,UAAY,CAAC,GAAI,GACpCC,EAAY,OAAH,QACdC,SAAS,EACTC,UAAU,EACVC,QAAQ,EACRC,SAAS,GACNrG,EAAQiG,WAGZhG,MAAM,CACLqG,KAAM,EAAAC,UAAUC,SAChBC,KAAOtF,IACN,MAAM,QAAEuF,EAAO,QAAER,EAAO,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,GAAYlF,EAAMA,OAE3B,IAA/B6E,EAASW,QAAQD,IAAmBE,EAAEC,QAAQ,CAAEX,UAASC,WAAUC,SAAQC,WAAWJ,KACzFW,EAAEE,QAAQ5G,KAAK6G,OAAO/D,WAAWgE,uBAAwB7G,IAEnDA,EAAM8G,YACV9G,EAAM+G,YAGRhH,KAAK6G,OAAOhE,qBAvBjB,uB,yFChBA,eAMA,MAAahC,UAAyB,EAAAgF,OACrChG,YAAYC,EAAmC,IAC9CC,MAAM,CACLqG,KAAM,EAAAC,UAAUY,YAChBV,KAAOW,IACN,MAAM,MAAEjG,GAAUiG,EAElB,IAAK,IAAI1E,KAASxC,KAAK6G,OAAO/D,WAAWqE,YACxC3E,EAAM4E,cAAa,GAGpB,MAAMnH,EAAQD,KAAK6G,OAAO/D,WAC1B7B,EAAMoG,kBACN,MAAMC,EAAgBtH,KAAK6G,OAAO/D,WAAWrB,eAAiB,IAC9D,IAAI8F,EAAczH,EAAQ0H,aAAevG,EAAMwG,OAASxG,EAAMwG,OAE1DxG,EAAM+E,SAAWuB,EAAc,GAAM,EAMxCA,GAAe,EAEfA,GAAe,GAEZtH,EAAMwB,eAAiB8F,EAAc,IACxCtH,EAAMqE,aAAarE,EAAMwB,eAAiB8F,GAG3C,MAAMlD,EAAapE,EAAMwB,eAAiB,IAEpCiG,EAAezG,EAAM0G,cAAc7F,wBACnCkC,EAAc0D,EAAaE,MAC3BzD,EAAeuD,EAAaG,OAE5BC,EAAY9D,EAAcK,EAAaL,EAAcsD,EACrDS,EAAa5D,EAAeE,EAAaF,EAAemD,EAExDlG,EAAUH,EAAMG,QAAUsG,EAAa3F,KACvCV,EAAUJ,EAAMI,QAAUqG,EAAa1F,IAGvC+B,GAAW3C,EAAUnB,EAAMuB,cAAgB8F,EAAgBtD,EAC3DE,GAAW7C,EAAUpB,EAAM0B,cAAgB2F,EAAgBnD,EAEjElE,EAAMsE,UAAUtE,EAAMuB,aAAesG,EAAY/D,EAAS9D,EAAM0B,aAAeoG,EAAa7D,GAC5FlE,KAAK6G,OAAOhE,gBAGZ,IAAK,IAAIL,KAASxC,KAAK6G,OAAO/D,WAAWqE,YACxC3E,EAAM4E,cAAa,OAnDxB,sB,2FCNA,gBAIA,SAAYf,GACX,0BACA,sBACA,0BACA,4BACA,sBACA,kBACA,4BACA,wBACA,0BATD,CAAY,EAAAA,YAAA,EAAAA,UAAS,KAkCrB,eAKCxG,YAAYC,GACXE,KAAKF,QAAUA,EACfE,KAAKgI,GAAK,EAAAxD,QAAQyD,MAGnBC,UAAUrB,GACT7G,KAAK6G,OAASA,K,uFClDhB,eAEA,SAIA,uBAKChH,YAAYgH,GACX7G,KAAKmI,QAAU,GACfnI,KAAK6G,OAASA,EACd7G,KAAKoI,KAAO,GAGbC,UACC,OAAO3B,EAAE0B,KAAKpI,KAAKoI,MAGpBxH,eAAe0H,GAGd,OAFAA,EAAOJ,UAAUlI,KAAK6G,QACtB7G,KAAKmI,QAAQG,EAAON,IAAMM,EACnB,KACNtI,KAAKuI,iBAAiBD,IAIxBC,iBAAiBD,GAChBA,EAAOJ,UAAU,aACVlI,KAAKmI,QAAQG,EAAON,IAG5BQ,kBAAkBpC,GACjB,OAAOM,EAAE+B,OAAOzI,KAAKmI,SAAUG,GACvBA,EAAOxI,QAAQsG,OAASA,IAIjCsC,iBAAiBxB,GAChB,OAAIA,EAAYjH,MACRiH,EAAYjH,MAEbD,KAAK6G,OAAOhD,gBAAgBqD,EAAYjG,OAGhD0H,mBAAmBzB,GAClB,MAAM,MAAEjG,GAAUiG,EAClB,MAAmB,cAAfjG,EAAMmF,KACFpG,KAAKwI,kBAAkB,EAAAnC,UAAUuC,YACf,YAAf3H,EAAMmF,KACTpG,KAAKwI,kBAAkB,EAAAnC,UAAUwC,UACf,YAAf5H,EAAMmF,MAEhBpG,KAAKoI,KAAMnH,EAAwB6H,IAAIC,gBAAiB,EACjD/I,KAAKwI,kBAAkB,EAAAnC,UAAUC,WACf,UAAfrF,EAAMmF,aAETpG,KAAKoI,KAAMnH,EAAwB6H,IAAIC,eACvC/I,KAAKwI,kBAAkB,EAAAnC,UAAU2C,SACf,cAAf/H,EAAMmF,KACTpG,KAAKwI,kBAAkB,EAAAnC,UAAU4C,YACf,UAAfhI,EAAMmF,KACTpG,KAAKwI,kBAAkB,EAAAnC,UAAUY,aACf,eAAfhG,EAAMmF,KACTpG,KAAKwI,kBAAkB,EAAAnC,UAAU6C,aACf,aAAfjI,EAAMmF,KACTpG,KAAKwI,kBAAkB,EAAAnC,UAAU8C,WACf,cAAflI,EAAMmF,KACTpG,KAAKwI,kBAAkB,EAAAnC,UAAU+C,YAGlC,GAGRC,WAAWnC,GACV,MAAMiB,EAAUnI,KAAK2I,mBAAmBzB,GACxC,IAAK,IAAIoB,KAAUH,EAClBG,EAAOxI,QAAQyG,KAAKW,M,mFC/EvB,eACA,SAEA,SA+BA,MAAaoC,UAAsE,EAAA1J,aAGlFC,YAAYC,EAAwB,IACnCC,QACAC,KAAKF,QAAU,OAAH,QACXkI,GAAI,EAAAxD,QAAQyD,OACTnI,GAILyJ,aACC,OAAOvJ,KAAKF,QAGb0J,QACC,OAAOxJ,KAAKF,QAAQkI,GAGrByB,QAAQC,EAAoC,GAAIC,IAIhDA,MAAMD,EAAoC,IAEzC,GAAIA,EAAY1J,KAAKF,QAAQkI,IAC5B,OAAO0B,EAAY1J,KAAKF,QAAQkI,IAEjC,IAAI2B,EAAQjD,EAAEkD,UAAU5J,MASxB,OARA2J,EAAM7J,QAAU,OAAH,wBACTE,KAAKF,SAAO,CACfkI,GAAI,EAAAxD,QAAQyD,QAEb0B,EAAME,iBACNH,EAAY1J,KAAKF,QAAQkI,IAAM2B,EAE/B3J,KAAKyJ,QAAQC,EAAaC,GACnBA,EAGRE,iBACC7J,KAAK8J,UAAY,GAGlBC,YAAY9I,GACXjB,KAAKF,QAAQkI,GAAK/G,EAAM+I,KAAKhC,GAC7BhI,KAAKF,QAAQmK,OAAShJ,EAAM+I,KAAKC,OAGlCC,YACC,MAAO,CACNlC,GAAIhI,KAAKF,QAAQkI,GACjBiC,OAAQjK,KAAKF,QAAQmK,QAIvBtG,UAAuD1C,EAAUkJ,GAChEpK,MAAM4D,UAAU,OAAD,QAEbyG,OAAQpK,MACLiB,GAEJkJ,GAIKpD,WACN,OAAO/G,KAAKF,QAAQmK,OAGdI,UAAUJ,GAAkB,GAClCjK,KAAKF,QAAQmK,OAASA,EACtBjK,KAAK2D,UACJ,CACCsG,OAAQA,GAET,gBA5EH,gB,kFClCA,eAQA,SAoBA,MAAaK,UAAmE,EAAAhB,WAG/EzJ,YAAYC,GACXC,MAAMD,GAGPyK,kBACC,OAAO,EAGRC,uBACC,OAAKxK,KAAKyK,OAGNzK,KAAKyK,kBAAkB,EAAAC,YACnB1K,KAAKyK,OACFzK,KAAKyK,kBAAkBH,EAC1BtK,KAAKyK,OAAOD,uBAEb,KAPC,KAUTG,YACC,OAAO3K,KAAKyK,OAGbG,UAAUH,GACTzK,KAAKyK,OAASA,EAGfI,uBACC,MAAO,CAAC7K,MAGTkK,YACC,OAAO,OAAP,wBACInK,MAAMmK,aAAW,CACpB9D,KAAMpG,KAAKF,QAAQsG,KACnB0E,SAAU9K,KAAKF,QAAQgL,SACvBC,OAAQ/K,KAAKF,QAAQiL,SAIvBhB,YAAY9I,GACXlB,MAAMgK,YAAY9I,GAClBjB,KAAKF,QAAQiL,OAAS9J,EAAM+I,KAAKe,OACjC/K,KAAKF,QAAQgL,SAAW7J,EAAM+I,KAAKc,SAGpCpI,UACC,OAAO1C,KAAKF,QAAQsG,KAGrB4E,aACC,OAAOhL,KAAKF,QAAQgL,SAGrB/D,WAEC,QADehH,MAAMgH,cAMjB/G,KAAKyK,QACDzK,KAAKyK,OAAO1D,WAKrBkE,YAAYH,GAAoB,GAC3B9K,KAAKF,QAAQgL,WAAaA,IAC7B9K,KAAKF,QAAQgL,SAAWA,EAExB9K,KAAK2D,UACJ,CACCqH,WAAYF,GAEb,qBAKH9D,SACChH,KAAK2D,UAAU,GAAI,kBArFrB,e,0FC5BA,eAEA,SAgBA,MAAauH,UACJ,EAAAZ,UAKRzK,YAAYC,GACXC,MAAMD,GACNE,KAAKmL,SAAWrL,EAAQqL,UAAY,IAAI,EAAA7J,MAAM,EAAG,GAKlD8J,YAAY7J,EAAGG,GAEb1B,KAAKmL,SADW,iBAAN5J,EACMA,EAEA,IAAI,EAAAD,MAAMC,EAAGG,GAE9B1B,KAAK2D,UAAU,GAAI,mBAGpB0H,iBACC,OAAO,IAAI,EAAAC,UAAUtL,KAAKmL,SAAU,EAAG,GAGxCpB,YAAY9I,GACXlB,MAAMgK,YAAY9I,GAClBjB,KAAKmL,SAAW,IAAI,EAAA7J,MAAML,EAAM+I,KAAKzI,EAAGN,EAAM+I,KAAKtI,GAGpDwI,YACC,OAAO,OAAP,wBACInK,MAAMmK,aAAW,CACpB3I,EAAGvB,KAAKmL,SAAS5J,EACjBG,EAAG1B,KAAKmL,SAASzJ,IAInB6J,cACC,OAAOvL,KAAKmL,SAGbK,OACC,OAAOxL,KAAKmL,SAAS5J,EAGtBkK,OACC,OAAOzL,KAAKmL,SAASzJ,GAhDvB,uB,kGClBA,eACA,SAWA,MAAsBgK,UAAyE,EAAAC,MAM9F9L,YAAYC,GACXC,MAAMD,GACNE,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAUuC,WAChBrC,KAAOW,IACN,MAAM,QAAE9F,EAAO,QAAEC,GAAY6F,EAAYjG,MACzCjB,KAAK4L,gBAAgBxK,EAASC,OAIjCrB,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAU4C,WAChB1C,KAAOW,IACN,MAAM,MAAEjG,GAAUiG,EAElB,GAAsB,IAAlBjG,EAAM4K,QAKT,YAFA7L,KAAK8L,QAKN,MAAM,QAAE1K,EAAO,QAAEC,GAAYJ,EAC7BjB,KAAK+L,WAAW3K,EAASC,EAASJ,OAIrCjB,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAUwC,SAChBtC,KAAM,IAAMvG,KAAKgM,mBAInBhM,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAU6C,YAChB3C,KAAOW,IACN,MAAM,QAAE9F,EAAO,QAAEC,GAAY6F,EAAYjG,MAAMgL,QAAQ,GACvDjM,KAAK4L,gBAAgBxK,EAASC,OAIjCrB,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAU+C,WAChB7C,KAAOW,IACN,MAAM,MAAEjG,GAAUiG,GACZ,QAAE9F,EAAO,QAAEC,GAAYJ,EAAMgL,QAAQ,GAC3CjM,KAAK+L,WAAW3K,EAASC,EAASJ,OAIrCjB,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAU8C,UAChB5C,KAAM,IAAMvG,KAAKgM,mBAKVJ,gBAAgBrK,EAAWG,GACpC1B,KAAKkM,SAAW3K,EAChBvB,KAAKmM,SAAWzK,EAChB,MAAM0K,EAAMpM,KAAK6G,OAAO1F,iBAAiBI,EAAGG,GAC5C1B,KAAKqM,iBAAmBD,EAAI7K,EAC5BvB,KAAKsM,iBAAmBF,EAAI1K,EAGnBqK,WAAWxK,EAAWG,EAAWT,GAC1CjB,KAAKuM,eAAe,CACnBC,cAAejL,EAAIvB,KAAKkM,SACxBO,cAAe/K,EAAI1B,KAAKmM,SACxBO,sBAAuBnL,EAAIvB,KAAKkM,WAAalM,KAAK6G,OAAO/D,WAAWrB,eAAiB,KACrFkL,sBAAuBjL,EAAI1B,KAAKmM,WAAanM,KAAK6G,OAAO/D,WAAWrB,eAAiB,KACrFR,UAIQ+K,gBACThM,KAAK8L,SAzFP,+B,8ECXA,eAEA,SAMA,cAUCjM,YAAYC,GACXE,KAAKmI,QAAU,GACfnI,KAAKoI,KAAO,GACZpI,KAAK4M,YAAc,GACnB5M,KAAKF,QAAUA,EAGhBoI,UAAUrB,GACT7G,KAAK6G,OAASA,EAGf0C,aACC,OAAOvJ,KAAKF,QAGbgM,QACC9L,KAAK6G,OAAO9F,kBAAkB8L,WAG/BC,oBAAoBC,EAAc9L,GACjCjB,KAAK6G,OAAO9F,kBAAkBiM,UAAUD,GACxC/M,KAAK6G,OAAOxE,oBAAoBgH,WAAWpI,GAG5CL,eAAe0H,GACdtI,KAAKmI,QAAQ8E,KAAK3E,GAGnB4E,uBAAuB9E,GACtB,OAAIpI,KAAKoI,KAAK+E,OAAS,IAAMnN,KAAKoN,iBAAiBhF,KAClDpI,KAAK8L,SACE,GAKTuB,sBAAsBjF,GACrB,MAAM2E,EAAQ/M,KAAKsN,oBAAoBlF,GACvC,QAAI2E,IACH/M,KAAK6G,OAAO9F,kBAAkBiM,UAAUD,IACjC,GAKTO,oBAAoBlF,GACnB,IAAK,IAAImF,KAASvN,KAAK4M,YACtB,GAAIW,EAAMH,iBAAiBhF,GAC1B,OAAOmF,EAIT,OAAO,KAGRH,iBAAiBhF,GAChB,OAAO1B,EAAE8G,aAAaxN,KAAKoI,KAAMA,GAAM+E,SAAWnN,KAAKoI,KAAK+E,OAG7DM,UAAUC,GACT,MAAMtF,EAAOpI,KAAK6G,OAAOxE,oBAAoBgG,UAE7C,IAAIrI,KAAKkN,uBAAuB9E,KAASpI,KAAKqN,sBAAsBjF,GAApE,CAKApI,KAAK2N,SAAW3N,KAAK6G,OAAOxE,oBAAoBzB,eAC/C,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAUC,SAChBC,KAAM,KACLvG,KAAKqN,sBAAsBrN,KAAK6G,OAAOxE,oBAAoBgG,eAK9DrI,KAAK4N,SAAW5N,KAAK6G,OAAOxE,oBAAoBzB,eAC/C,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAU2C,OAChBzC,KAAM,KACLvG,KAAKkN,uBAAuBlN,KAAK6G,OAAOxE,oBAAoBgG,eAK/D,IAAK,IAAIC,KAAUtI,KAAKmI,QACvBnI,KAAK6G,OAAOxE,oBAAoBzB,eAAe0H,IAIjDuF,YAAYC,GACP9N,KAAK2N,UACR3N,KAAK2N,WAEF3N,KAAK4N,UACR5N,KAAK4N,WAGN,IAAK,IAAItF,KAAUtI,KAAKmI,QACvBnI,KAAK6G,OAAOxE,oBAAoBkG,iBAAiBD,M,qFCrHpD,eAEA,SAMA,MAAajI,UAAqB,EAAAT,aAKjCC,YAAYgH,GACX9G,QACAC,KAAK6G,OAASA,EACd7G,KAAK+N,WAAa,GAGnBC,kBACC,OAAOhO,KAAKiO,aAGbjB,UAAUD,GACT/M,KAAK+N,WAAWd,KAAKF,GACrB/M,KAAKkO,SAASnB,GAGfF,WACC7M,KAAK+N,WAAWI,MAChBnO,KAAKkO,SAASxH,EAAE0H,KAAKpO,KAAK+N,aAG3BG,SAASnB,GACRA,EAAM7E,UAAUlI,KAAK6G,QAGjB7G,KAAKiO,cACRjO,KAAKiO,aAAaJ,YAAYd,GAE/B,MAAMsB,EAAMrO,KAAKiO,aACjBjO,KAAKiO,aAAelB,EAChB/M,KAAKiO,eACRjO,KAAKiO,aAAaR,UAAUY,GAC5BrO,KAAK2D,UACJ,CACC2K,SAAUvB,GAEX,kBAxCJ,kB,sFCFA,wBAWClN,YAAYuG,GACXpG,KAAKoG,KAAOA,EAGbjE,iBAAiB0E,GAChB7G,KAAK6G,OAASA,EAGf0H,eAAeC,GACdxO,KAAKwO,KAAOA,EAGb9L,UACC,OAAO1C,KAAKoG,Q,4FC/Bd,eAQA,MAAsBqI,UAGZ,EAAAC,iBAHV,0B,6FCPA,cAUA,MAAsBC,UAGZ,EAAAF,sBAHV,0B,qFCXA,eAiDA,qBAGC5O,cACCG,KAAK8J,UAAY,GAGV8E,kBAAkBrI,EAAe4D,EAAYlJ,GACpDjB,KAAKiD,kBAAkBC,IAEtB,IAAKqD,IAAStF,EAAM4N,OACnB,OAAO,EAGJ3L,EAASiH,IACZjH,EAASiH,GAAGlJ,MAKf0C,UAA6B1C,EAAqCkJ,GACjElJ,EAAQ,OAAH,QACJ4N,QAAQ,EACRxH,gBAAiB,KAChBpG,EAAM4N,QAAS,IAEb5N,GAIJjB,KAAK4O,mBAAkB,EAAM,gBAAiB,+BAC1C3N,GAAK,CACR6N,SAAU3E,KAIXnK,KAAK4O,mBAAkB,EAAOzE,EAAGlJ,GAGjCjB,KAAK4O,mBAAkB,EAAM,eAAgB,+BACzC3N,GAAK,CACR6N,SAAU3E,KAIZlH,iBAAiB8L,GAChB,IAAK,IAAI/G,KAAMhI,KAAK8J,UAAW,CAG9B,IAAY,IAFAiF,EAAG/O,KAAK8J,UAAU9B,IAG7B,QAKHgH,kBAAkB9L,GACjB,IAAK,IAAI8E,KAAMhI,KAAK8J,UACnB,GAAI9J,KAAK8J,UAAU9B,KAAQ9E,EAC1B,MAAO,CACN8E,GAAIA,EACJ9E,SAAUA,EACVO,WAAY,YACJzD,KAAK8J,UAAU9B,KAO3B/F,iBAAiBiB,GAChB,MAAM8E,EAAK,EAAAxD,QAAQyD,MAEnB,OADAjI,KAAK8J,UAAU9B,GAAM9E,EACd,CACN8E,GAAIA,EACJ9E,SAAUA,EACVO,WAAY,YACJzD,KAAK8J,UAAU9B,KAKzBiH,mBAAmB/L,GAClB,GAAwB,iBAAbA,EAEV,OADCA,EAA4BO,cACtB,EAER,MAAMyL,EAASlP,KAAKgP,kBAAkB9L,GACtC,QAAIgM,IACHA,EAAOzL,cACA,M,oFC1IV,eAEA,SAiBA,MAAalD,UAGH,EAAAX,aAGTC,cACCE,QACAC,KAAKmP,UAAY,GAGlBC,eACC,OAAO1I,EAAE2I,OAAOrP,KAAKmP,WAGtBG,iBACC,IAAK,IAAIjQ,KAAWW,KAAKmP,UACxBnP,KAAKuP,kBAAkBlQ,GAIzBoD,WAA4B2D,GAC3B,IAAKpG,KAAKmP,UAAU/I,GACnB,MAAM,IAAIoJ,MAAM,kCAAkCpJ,MAEnD,OAAOpG,KAAKmP,UAAU/I,GAGvBqJ,gBAAgBpQ,GACfA,EAAQkP,eAAevO,MACvBA,KAAKmP,UAAU9P,EAAQqD,WAAarD,EAEpCW,KAAK2D,UAA0B,CAAEtE,WAAkB,gBAGpDkQ,kBAAkBnJ,GACjB,MAAM/G,EAAUW,KAAKmP,UAAU/I,GAC/B/G,EAAQkP,eAAe,aAChBvO,KAAKmP,UAAU/I,GAEtBpG,KAAK2D,UAA4B,CAAEtE,WAAkB,mBAxCvD,iB,kJCnBA,eACA,SAiCA,MAAaqL,UAAyE,EAAApB,WAGrFzJ,YAAYC,EAAwB,IACnCC,MAAM,OAAD,QACJ2P,KAAM,IACNC,SAAU,EACVC,QAAS,EACTC,QAAS,GACN/P,IAEJE,KAAK8P,OAAS,GAGfjF,uBACC,OAAOnE,EAAEqJ,QAAQ/P,KAAK8P,QAAStN,GACvBA,EAAMqI,yBAIf/D,sBACC,OAAOJ,EAAE+B,OAAOzI,KAAK6K,wBAAyBmF,GACtCA,EAAGhF,eAIZiF,iBACCvJ,EAAEE,QAAQ5G,KAAK8G,uBAAwB7B,IACtCA,EAAQgG,aAAY,MAItBiF,YACC,OAAOxJ,EAAEqJ,QAAQ/P,KAAK8P,QAAStN,GACvBkE,EAAE2I,OAAO7M,EAAM0N,eAIxBC,SAAS3N,GACRA,EAAMoI,UAAU5K,MAChBwC,EAAMP,iBAAiB,CACtBmO,cAAgBnP,QAEjBjB,KAAK8P,OAAO7C,KAAKzK,GAGlB6N,YAAY7N,GACX,MAAM8N,EAAQtQ,KAAK8P,OAAOrJ,QAAQjE,GAClC,OAAe,IAAX8N,IACHtQ,KAAK8P,OAAOS,OAAOD,EAAO,IACnB,GAKTnJ,YACC,OAAOnH,KAAK8P,OAGbU,YAAYC,EAAe,GAC1BzQ,KAAKF,QAAQ6P,SAAWc,EACxBzQ,KAAK2D,UAAU,CAAE8M,KAAMA,GAAQ,eAGhCC,gBAAgBC,GACf,OAA8B,IAA1B3Q,KAAKF,QAAQ6P,SACTgB,EAED3Q,KAAKF,QAAQ6P,SAAW7K,KAAK8L,OAAOD,EAAM3Q,KAAKF,QAAQ6P,SAAW,GAAK3P,KAAKF,QAAQ6P,UAG5FkB,iBAAiB7G,EAAqCnD,GACrD,MAAMiK,EAEF,GACEC,EAEF,GACEC,EAEF,GAEE/P,EAA0B,CAC/B+I,KAAMA,EACNnD,OAAQA,EACRoK,cAAgBhR,IACf6Q,EAAO7Q,EAAMuJ,SAAWvJ,EACpB+Q,EAAU/Q,EAAMuJ,UACnBwH,EAAU/Q,EAAMuJ,SAASvJ,IAG3B6C,SAA8BkF,GACzB8I,EAAO9I,GACH3E,QAAQC,QAAQwN,EAAO9I,KAE1B+I,EAAS/I,KACb+I,EAAS/I,GAAM,IAAI3E,SAASC,IAC3B0N,EAAUhJ,GAAM1E,MAGXyN,EAAS/I,KAGlBhI,KAAK+J,YAAY9I,GAGlB8I,YAAY9I,GACXlB,MAAMgK,YAAY9I,GAClBjB,KAAKF,QAAQ8P,QAAU3O,EAAM+I,KAAK4F,QAClC5P,KAAKF,QAAQ+P,QAAU5O,EAAM+I,KAAK6F,QAClC7P,KAAKF,QAAQ4P,KAAOzO,EAAM+I,KAAK0F,KAC/B1P,KAAKF,QAAQ6P,SAAW1O,EAAM+I,KAAK2F,SACnCjJ,EAAEE,QAAQ3F,EAAM+I,KAAK8F,QAAStN,IAC7B,MAAM0O,EAAUjQ,EAAM4F,OAAOtE,mBAAmBC,EAAM4D,MAAM+K,cAAc,CACzEC,cAAe5O,IAEhB0O,EAAQnH,YAAY,OAAD,wBACf9I,GAAK,CACR+I,KAAMxH,KAEPxC,KAAKmQ,SAASe,MAIhBhH,YACC,OAAO,OAAP,wBACInK,MAAMmK,aAAW,CACpB0F,QAAS5P,KAAKF,QAAQ8P,QACtBC,QAAS7P,KAAKF,QAAQ+P,QACtBH,KAAM1P,KAAKF,QAAQ4P,KACnBC,SAAU3P,KAAKF,QAAQ6P,SACvBG,OAAQpJ,EAAE2K,IAAIrR,KAAK8P,QAAStN,GACpBA,EAAM0H,gBAKhB5F,aAAaoL,GACZ1P,KAAKF,QAAQ4P,KAAOA,EACpB1P,KAAK2D,UAAU,CAAE+L,QAAQ,eAG1BnL,UAAUqL,EAAiBC,GAC1B7P,KAAKF,QAAQ8P,QAAUA,EACvB5P,KAAKF,QAAQ+P,QAAUA,EACvB7P,KAAK2D,UAAU,CAAEiM,UAASC,WAAW,iBAGtCyB,WAAW1B,GACV5P,KAAKuE,UAAUqL,EAAS5P,KAAKF,QAAQ+P,SAGtC0B,WAAW1B,GACV7P,KAAKuE,UAAUvE,KAAKF,QAAQ8P,QAASC,GAGtClO,aACC,OAAO3B,KAAKF,QAAQ+P,QAGrBrO,aACC,OAAOxB,KAAKF,QAAQ8P,QAGrBnO,eACC,OAAOzB,KAAKF,QAAQ4P,MArKtB,iB,oFClCA,eAEA,SACA,SACA,SAOA,IAAU8B,GAAV,SAAUA,GACI,EAAAC,OAAS,UAAOC,GAAG;;;;GADjC,CAAUF,MAAC,KAQX,MAAaG,UAAqBC,EAAMC,UAMvChS,YAAYiS,GACX/R,MAAM+R,GAEN9R,KAAK+R,IAAMH,EAAMI,YACjBhS,KAAK+M,MAAQ,CACZzE,OAAQ,KACR2J,sBAAuB,MAIzBC,uBACClS,KAAK8R,MAAMjL,OAAOoI,mBAAmBjP,KAAKmS,gBAC1CnS,KAAK8R,MAAMjL,OAAOnD,UAAU,MAE5B0O,SAASC,oBAAoB,QAASrS,KAAKsS,OAC3CF,SAASC,oBAAoB,UAAWrS,KAAKuS,SAG9CC,iBACCxS,KAAK8R,MAAMjL,OAAOnD,UAAU1D,KAAK+R,IAAIU,SACrCzS,KAAK8R,MAAMjL,OAAO5D,kBAAkByP,IACnCA,EAAKlP,UAAYkP,EAAKlP,cAIxBmP,qBACC3S,KAAKwS,iBAGNI,oBACC5S,KAAKmS,eAAiBnS,KAAK8R,MAAMjL,OAAO5E,iBAAiB,CACxDY,cAAe,KACd7C,KAAK6S,iBAIP7S,KAAKuS,QAAWtR,IACfjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,WAEpDjB,KAAKsS,MAASrR,IACbjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,WAGpDmR,SAASU,iBAAiB,QAAS9S,KAAKsS,OACxCF,SAASU,iBAAiB,UAAW9S,KAAKuS,SAC1CvS,KAAKwS,iBAGNO,SACC,MACM9S,EADSD,KAAK8R,MAAMjL,OACL/D,WAErB,OACC,gBAAC0O,EAAEC,OAAM,CACRuB,UAAWhT,KAAK8R,MAAMkB,UACtBjB,IAAK/R,KAAK+R,IACVkB,QAAUhS,IACTjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,WAEpDiS,YAAcjS,IACbjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,WAEpDkS,UAAYlS,IACXjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,WAEpDmS,YAAcnS,IACbjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,WAEpDoS,aAAepS,IACdjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,WAEpDqS,WAAarS,IACZjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,WAEpDsS,YAActS,IACbjB,KAAK8R,MAAMjL,OAAOxE,oBAAoBgH,WAAW,CAAEpI,YAEnDhB,EAAMkH,YAAYkK,KAAK7O,GAEtB,gBAAC,EAAAgR,qBAAoB,CAAChR,MAAOA,EAAOsG,IAAKtG,EAAMgH,SAC9C,gBAAC,EAAAiK,iBAAgB,CAACjR,MAAOA,EAAOqE,OAAQ7G,KAAK8R,MAAMjL,OAAQiC,IAAKtG,EAAMgH,eAtF7E,kB,mFCnBA,eAEA,SAkBA,MAAsBkK,UAAsE,EAAApJ,UAI3FzK,YAAYC,EAAwB,IACnCC,MAAMD,GACNE,KAAK8Q,OAAS,GACd9Q,KAAK2T,gBAAiB,EAQvB5J,YAAY9I,GACXlB,MAAMgK,YAAY9I,GAClBjB,KAAKF,QAAQ8T,QAAU3S,EAAM+I,KAAK4J,MAClC5T,KAAKF,QAAQ+T,cAAgB5S,EAAM+I,KAAK6J,YACxCnN,EAAEE,QAAQ3F,EAAM+I,KAAK8G,QAAS7Q,IAC7B,MAAM6T,EAAU9T,KAAK+T,yBAAyB9S,EAAM4F,QAAQpE,WAAWxC,EAAMmG,MAAM+K,cAAc,CAChGC,cAAenR,IAEhB6T,EAAQ/J,YAAY,OAAD,wBACf9I,GAAK,CACR+I,KAAM/J,KAEPD,KAAKgU,SAASF,MAIhB5J,YACC,OAAO,OAAP,wBACInK,MAAMmK,aAAW,CACpB0J,MAAO5T,KAAKF,QAAQ8T,MACpBC,YAAa7T,KAAKF,QAAQ+T,YAC1B/C,OAAQpK,EAAEuN,UAAUjU,KAAK8Q,QAAS7Q,GAC1BA,EAAMiK,gBAKhBgK,mBACC,OAAOlU,KAAK2T,eAGbvM,aAAa+M,GAAiB,GAC7BnU,KAAK2T,eAAiBQ,EAGvBnN,SACKhH,KAAKyK,QACRzK,KAAKyK,OAAO4F,YAAYrQ,MAEzBD,MAAMiH,SAGPgN,SAAS/T,GACRA,EAAM2K,UAAU5K,MAChBA,KAAK8Q,OAAO7Q,EAAMuJ,SAAWvJ,EAG9B4K,uBACC,OAAOnE,EAAEqJ,QAAQ/P,KAAK8Q,QAAS7Q,GACvBA,EAAM4K,yBAIfqF,YACC,OAAOlQ,KAAK8Q,OAGbhO,SAASkF,GACR,OAAOhI,KAAK8Q,OAAO9I,GAGpBoM,YAAYpM,GACX,MAAMqM,EAAoB,iBAAPrM,EAAkBA,EAAKA,EAAGwB,QAC7C,QAAIxJ,KAAK8Q,OAAOuD,YACRrU,KAAK8Q,OAAOuD,IACZ,IAhFV,gB,yFCpBA,eASA,MAAaZ,UAAyB7B,EAAMC,UAC3CyC,wBACC,OAAOtU,KAAK8R,MAAMtP,MAAM0R,mBAGzBnB,SACC,OAAO/S,KAAK8R,MAAMjL,OAAOtE,mBAAmBvC,KAAK8R,MAAMtP,OAAO+R,oBAAoB,CAAEtU,MAAOD,KAAK8R,MAAMtP,SANxG,sB,6FCTA,eACA,SAGA,SAMA,IAAUgP,GAAV,SAAUA,GACT,MAAMgD,EAAS,EAAAC,GAAG;;;;;;;;;;;GAaL,EAAAC,SAAW,UAAOhD,GAAG;IAC/B8C;GAGUhD,EAAAmD,SAAW,UAAOC,GAAG;IAC/BJ;GAnBJ,CAAUhD,MAAC,KAuBX,MAAagC,UAA6B5B,EAAMC,UAC/ChS,YAAYiS,GACX/R,MAAM+R,GACN9R,KAAK+M,MAAQ,GAGd8H,eACC,MAAM5U,EAAQD,KAAK8R,MAAMtP,MAAMmI,YAC/B,MAAO,+BAEH1K,EAAMuB,4BACNvB,EAAM0B,0CAEN1B,EAAMwB,eAAiB,qBAK5BqT,oBACC,OAAI9U,KAAK8R,MAAMtP,MAAM+G,aAAasK,YAC1B,CACNkB,UAAW/U,KAAK6U,gBAGX,GAGR9B,SACC,OAAI/S,KAAK8R,MAAMtP,MAAM+G,aAAaqK,MAC1B,gBAACpC,EAAEmD,SAAQ,CAACK,MAAOhV,KAAK8U,qBAAsB9U,KAAK8R,MAAMmD,UAE1D,gBAACzD,EAAEkD,SAAQ,CAACM,MAAOhV,KAAK8U,qBAAsB9U,KAAK8R,MAAMmD,WA/BlE,0B,iGCjCA,eACA,SACA,SAEA,SAEA,MAAaC,UAAiC,EAAAvG,qBAC7C9O,cACCE,MAAM,aAGPoR,cAAclQ,GACb,OAAO,IAAI,EAAAkU,oBAGZZ,oBAAoBtT,GACnB,OAAO,gBAAC,EAAAmU,mBAAkB,CAACC,KAAMpU,EAAMhB,MAAMqV,OAV/C,8B,2FCNA,eACA,SAMA,IAAU9D,GAAV,SAAUA,GACI,EAAA+D,UAAY,UAAO7D,GAAG;;;;GADpC,CAAUF,MAAC,KAQX,MAAa4D,UAA2BxD,EAAMC,UAC7CkB,SACC,MAAM,KAAEsC,GAASrV,KAAK8R,MAEtB,OAAKuD,EAGJ,gBAAC7D,EAAE+D,UAAS,CACXP,MAAO,CACNhT,IAAKqT,EAAKrT,IACVD,KAAMsT,EAAKtT,KACX6F,MAAOyN,EAAKzN,MACZC,OAAQwN,EAAKxN,UARE,MAJpB,wB,4FCfA,eAKA,MAAasN,UAA4B,EAAAzB,WAGxC7T,cACCE,MAAM,CACL8T,aAAa,EACbD,OAAO,EACPxN,KAAM,cAIRoP,OAAOH,GACNrV,KAAKsV,IAAMD,EAGZtB,2BAEC,OAAO,MAjBT,yB,8YCLA,YACA,YACA,YAEA,YACA,WACA,YACA,YACA,YACA,YAEA,YACA,YAEA,YACA,YACA,YAEA,YACA,WAEA,YACA,YACA,YAEA,YACA,YACA,YAEA,WAEA,YACA,YACA,YAEA,YACA,WACA,YACA,YACA,YAEA,YACA,a,qFC1CA,eACA,SAEA,QACA,SACA,SAEA,MAAa0B,UAAqB,EAAA9J,MACjC9L,cACCE,MAAM,CACL2V,KAAM,YAEP1V,KAAK4M,YAAc,CAAC,IAAI,EAAA+I,gBAGxB3V,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAUuC,WAChBrC,KAAOtF,IACUjB,KAAK6G,OAAOxE,oBAAoBqG,iBAAiBzH,GAMhEjB,KAAK8M,oBAAoB,IAAI,EAAA8I,eAAkB3U,GAF/CjB,KAAK8M,oBAAoB,IAAI,EAAA+I,gBAAmB5U,OASpDjB,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAU6C,YAChB3C,KAAOtF,IACNjB,KAAK8M,oBAAoB,IAAI,EAAA+I,gBAAmB5U,QA7BrD,kB,6ZCPA,eAUA,MAAa4U,UAAwB,EAAAnK,0BAMpC7L,YAAYC,EAAkC,IAC7CC,MAAM,CACL2V,KAAM,gBAEP1V,KAAK8V,OAAS,OAAH,QACVC,WAAW,GACRjW,GAIC2N,UAAUuI,G,2GACf,EAAMvI,UAAS,UAACuI,GAChBhW,KAAK6G,OAAO/D,WAAWmN,uBACjBjQ,KAAK6G,OAAOhE,eAAc,GAGhC,IAAK,IAAIL,KAASxC,KAAK6G,OAAO/D,WAAWqE,YACxC3E,EAAM4E,cAAa,GAGpBpH,KAAKiW,eAAiBjW,KAAK6G,OAAO/D,WAAWtB,aAC7CxB,KAAKkW,eAAiBlW,KAAK6G,OAAO/D,WAAWnB,gBAG9CkM,YAAYC,GACX/N,MAAM8N,YAAYC,GAClB,IAAK,IAAItL,KAASxC,KAAK6G,OAAO/D,WAAWqE,YACxC3E,EAAM4E,cAAa,GAIrBmF,eAAetL,GACVjB,KAAK8V,OAAOC,YACf/V,KAAK6G,OACH/D,WACAyB,UAAUvE,KAAKiW,eAAiBhV,EAAMuL,cAAexM,KAAKkW,eAAiBjV,EAAMwL,eACnFzM,KAAK6G,OAAOhE,kBA1Cf,qB,uFCVA,eAEA,SACA,SAIA,MAAa+S,UAA8D,EAAAlK,0BAQ1E7L,cACCE,MAAM,CACL2V,KAAM,eAEP1V,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAUuC,WAChBrC,KAAOtF,IACN,MAAMgE,EAAUjF,KAAK6G,OAAOxE,oBAAoBqG,iBAAiBzH,GAC5DgE,IAGAA,EAAQ+F,cACZhL,KAAK6G,OAAO/D,WAAWmN,iBAExBhL,EAAQgG,aAAY,GACpBjL,KAAK6G,OAAOhE,qBAMhB4K,UAAUC,GACT3N,MAAM0N,UAAUC,GAChB1N,KAAKmW,iBAAmB,GAGzB5J,eAAetL,GACd,MAAMmV,EAAQpW,KAAK6G,OAAO/D,WAAWgE,sBAC/B7G,EAAQD,KAAK6G,OAAO/D,WAC1B,IAAK,IAAIuT,KAAQD,EAChB,GAAIC,aAAgB,EAAAnL,kBAAmB,CACtC,GAAImL,EAAKtP,WACR,SAEI/G,KAAKmW,iBAAiBE,EAAK7M,WAC/BxJ,KAAKmW,iBAAiBE,EAAK7M,SAAW,CACrCtI,MAAOmV,EAAK9K,cACZ8K,KAAMA,IAIR,MAAM1F,EAAM3Q,KAAKmW,iBAAiBE,EAAK7M,SAAStI,MAChDmV,EAAKjL,YACJnL,EAAMyQ,gBAAgBC,EAAIpP,EAAIN,EAAMyL,sBACpCzM,EAAMyQ,gBAAgBC,EAAIjP,EAAIT,EAAM0L,uBAIvC3M,KAAK6G,OAAOhE,iBAzDd,oB,uFCPA,eACA,SACA,SAGA,MAAa8S,UAAuB,EAAAhK,MACnC9L,cACCE,MAAM,CACL2V,KAAM,cAEP1V,KAAKoI,KAAO,CAAC,SAEbpI,KAAKY,eACJ,IAAI,EAAAiF,OAAO,CACVO,KAAM,EAAAC,UAAUuC,WAChBrC,KAAOtF,IACN,MAAMgE,EAAUjF,KAAK6G,OAAOxE,oBAAoBqG,iBAAiBzH,GAG5DgE,GAGJA,EAAQgG,aAAY,GACpBjL,KAAK6G,OAAOhE,iBAHZ7C,KAAK8M,oBAAoB,IAAI,EAAAwJ,kBAAqBrV,QAfxD,oB,0FCLA,eAEA,SACA,SAGA,MAAaqV,UAA0B,EAAA5K,0BAGtC7L,cACCE,MAAM,CACL2V,KAAM,kBAIRjI,UAAUC,GACT3N,MAAM0N,UAAUC,GAChB1N,KAAKwC,MAAQ,IAAI,EAAA2S,oBACjBnV,KAAK6G,OAAO/D,WAAWqN,SAASnQ,KAAKwC,OAGtCqL,YAAYC,GACX/N,MAAM8N,YAAYC,GAClB9N,KAAKwC,MAAMwE,SACXhH,KAAK6G,OAAOhE,gBAGb0T,iBAAiBtV,GAChB,IAAImL,EAEJ,GAAI,YAAanL,EAAMA,MAAO,CAC7B,MAAMuV,EAAQvV,EAAMA,MAAMgL,QAAQ,GAClCG,EAAMpM,KAAK6G,OAAO1F,iBAAiBqV,EAAMpV,QAASoV,EAAMnV,cAExD+K,EAAMpM,KAAK6G,OAAO1F,iBAAiBF,EAAMA,MAAMG,QAASH,EAAMA,MAAMI,SAGrE,MAAO,CACNU,KAAMqK,EAAI7K,EAAIvB,KAAKqM,iBAAmBrM,KAAKqM,iBAAmBD,EAAI7K,EAClES,IAAKoK,EAAI1K,EAAI1B,KAAKsM,iBAAmBtM,KAAKsM,iBAAmBF,EAAI1K,EACjEkG,MAAO9C,KAAK2R,IAAIrK,EAAI7K,EAAIvB,KAAKqM,kBAC7BxE,OAAQ/C,KAAK2R,IAAIrK,EAAI1K,EAAI1B,KAAKsM,kBAC9BoK,MAAOtK,EAAI7K,EAAIvB,KAAKqM,iBAAmBrM,KAAKqM,iBAAmBD,EAAI7K,EACnEoV,OAAQvK,EAAI1K,EAAI1B,KAAKsM,iBAAmBtM,KAAKsM,iBAAmBF,EAAI1K,GAItE6K,eAAetL,GACdjB,KAAKwC,MAAMgT,OAAOxV,KAAKuW,iBAAiBtV,IAExC,MAAM2V,EAAW5W,KAAK6G,OAAO7F,sBAAsB,CAClDI,QAASpB,KAAKkM,SACd7K,QAASrB,KAAKmM,WAEXlL,EAAMyL,qBAAuB,IAChCkK,EAASrV,GAAKuD,KAAK2R,IAAIxV,EAAMyL,uBAE1BzL,EAAM0L,qBAAuB,IAChCiK,EAASlV,GAAKoD,KAAK2R,IAAIxV,EAAM0L,uBAE9B,MAAM0I,EAAO,IAAI,EAAA/J,UAAUsL,EAAU9R,KAAK2R,IAAIxV,EAAMyL,sBAAuB5H,KAAK2R,IAAIxV,EAAM0L,uBAE1F,IAAK,IAAI1M,KAASD,KAAK6G,OAAO/D,WAAW+H,uBACxC,GAAK5K,EAA4CoL,eAAgB,CAChE,MAAMwL,EAAU5W,EAA4CoL,iBACxDgK,EAAKyB,cAAcD,EAAOE,eAAiB1B,EAAKyB,cAAcD,EAAOG,kBACxE/W,EAAMgL,aAAY,GAElBhL,EAAMgL,aAAY,GAKrBjL,KAAK6G,OAAOhE,iBAnEd,uB,wFCNA,eACA,SAWA,MAAaoU,UAAyBrF,EAAMC,UAC3CyC,sBACC4C,EACAC,EACAC,GAEA,OAAKpX,KAAK8R,MAAM7R,MAAMsK,oBAIlBvK,KAAK8R,MAAM7R,QAAUiX,EAAUjX,QAK3ByG,EAAEC,QAAQ3G,KAAK8R,MAAMuF,WAAYH,EAAUG,aAGpDtE,SACC,OAAO/S,KAAK8R,MAAMmD,YAnBpB,sB,QCZA1V,EAAOD,QAAUgY,QAAQ,mB,QCAzB/X,EAAOD,QAAUgY,QAAQ,oB,QCAzB/X,EAAOD,QAAUgY,QAAQ,2B,QCAzB/X,EAAOD,QAAUgY,QAAQ,W,QCAzB/X,EAAOD,QAAUgY,QAAQ,WCCrBC,EAA2B,G,OAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAapY,QAGrB,IAAIC,EAASgY,EAAyBE,GAAY,CAGjDnY,QAAS,IAOV,OAHAsY,EAAoBH,GAAUhS,KAAKlG,EAAOD,QAASC,EAAQA,EAAOD,QAASkY,GAGpEjY,EAAOD,QClBWkY,CAAoB,M","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-canvas-core\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-canvas-core\"] = factory();\n})(self, function() {\nreturn ","import { debounce } from 'lodash';\nimport { CanvasModel } from './entities/canvas/CanvasModel';\nimport { FactoryBank } from './core/FactoryBank';\nimport { AbstractReactFactory } from './core/AbstractReactFactory';\nimport { LayerModel } from './entities/layer/LayerModel';\nimport { BaseListener, BaseObserver } from './core/BaseObserver';\nimport { MouseEvent } from 'react';\nimport { BaseModel } from './core-models/BaseModel';\nimport { Point } from '@projectstorm/geometry';\nimport { ActionEventBus } from './core-actions/ActionEventBus';\nimport { ZoomCanvasAction } from './actions/ZoomCanvasAction';\nimport { DeleteItemsAction } from './actions/DeleteItemsAction';\nimport { StateMachine } from './core-state/StateMachine';\n\nexport interface CanvasEngineListener extends BaseListener {\n\tcanvasReady?(): void;\n\n\trepaintCanvas?(): void;\n\n\trendered?(): void;\n}\n\n/**\n * Defines the CanvasEngine options\n */\nexport interface CanvasEngineOptions {\n\tregisterDefaultDeleteItemsAction?: boolean;\n\tregisterDefaultZoomCanvasAction?: boolean;\n\t/**\n\t * Defines the debounce wait time in milliseconds if > 0\n\t */\n\trepaintDebounceMs?: number;\n}\n\nexport class CanvasEngine<\n\tL extends CanvasEngineListener = CanvasEngineListener,\n\tM extends CanvasModel = CanvasModel\n> extends BaseObserver<L> {\n\tprotected model: M;\n\tprotected layerFactories: FactoryBank<AbstractReactFactory<LayerModel>>;\n\tprotected canvas: HTMLDivElement;\n\tprotected eventBus: ActionEventBus;\n\tprotected stateMachine: StateMachine;\n\tprotected options: CanvasEngineOptions;\n\n\tconstructor(options: CanvasEngineOptions = {}) {\n\t\tsuper();\n\t\tthis.model = null;\n\t\tthis.eventBus = new ActionEventBus(this);\n\t\tthis.stateMachine = new StateMachine(this);\n\t\tthis.layerFactories = new FactoryBank();\n\t\tthis.registerFactoryBank(this.layerFactories);\n\n\t\t/**\n\t\t * Overrides the standard options with the possible given options\n\t\t */\n\t\tthis.options = {\n\t\t\tregisterDefaultDeleteItemsAction: true,\n\t\t\tregisterDefaultZoomCanvasAction: true,\n\t\t\trepaintDebounceMs: 0,\n\t\t\t...options\n\t\t};\n\t\tif (this.options.registerDefaultZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new ZoomCanvasAction());\n\t\t}\n\t\tif (this.options.registerDefaultDeleteItemsAction === true) {\n\t\t\tthis.eventBus.registerAction(new DeleteItemsAction());\n\t\t}\n\t}\n\n\tgetStateMachine() {\n\t\treturn this.stateMachine;\n\t}\n\n\tgetRelativeMousePoint(event: { clientX: number; clientY: number }): Point {\n\t\tconst point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn new Point(\n\t\t\t(point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0),\n\t\t\t(point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0)\n\t\t);\n\t}\n\n\tgetRelativePoint(x, y): Point {\n\t\tconst canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn new Point(x - canvasRect.left, y - canvasRect.top);\n\t}\n\n\tregisterFactoryBank(factory: FactoryBank) {\n\t\tfactory.registerListener({\n\t\t\tfactoryAdded: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(this);\n\t\t\t},\n\t\t\tfactoryRemoved: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(null);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetActionEventBus() {\n\t\treturn this.eventBus;\n\t}\n\n\tgetLayerFactories() {\n\t\treturn this.layerFactories;\n\t}\n\n\tgetFactoryForLayer<F extends AbstractReactFactory<LayerModel>>(layer: LayerModel | string) {\n\t\tif (typeof layer === 'string') {\n\t\t\treturn this.layerFactories.getFactory(layer);\n\t\t}\n\t\treturn this.layerFactories.getFactory(layer.getType());\n\t}\n\n\tsetModel(model: M) {\n\t\tthis.model = model;\n\t\tif (this.canvas) {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.repaintCanvas();\n\t\t\t});\n\t\t}\n\t}\n\n\tgetModel(): M {\n\t\treturn this.model;\n\t}\n\n\trepaintCanvas(promise: true): Promise<any>;\n\trepaintCanvas(): void;\n\trepaintCanvas(promise?): Promise<any> | void {\n\t\tconst { repaintDebounceMs } = this.options;\n\n\t\t/**\n\t\t * The actual repaint function\n\t\t */\n\t\tconst repaint = () => {\n\t\t\tthis.iterateListeners((listener) => {\n\t\t\t\tif (listener.repaintCanvas) {\n\t\t\t\t\tlistener.repaintCanvas();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// if the `repaintDebounceMs` option is > 0, then apply the debounce\n\t\tlet repaintFn = repaint;\n\n\t\tif (repaintDebounceMs > 0) {\n\t\t\trepaintFn = debounce(repaint, repaintDebounceMs);\n\t\t}\n\n\t\tif (promise) {\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tconst l = this.registerListener({\n\t\t\t\t\trendered: () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\tl.deregister();\n\t\t\t\t\t}\n\t\t\t\t} as L);\n\t\t\t\trepaintFn();\n\t\t\t});\n\t\t}\n\n\t\trepaintFn();\n\t}\n\n\tsetCanvas(canvas?: HTMLDivElement) {\n\t\tif (this.canvas !== canvas) {\n\t\t\tthis.canvas = canvas;\n\t\t\tif (canvas) {\n\t\t\t\tthis.fireEvent({}, 'canvasReady');\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCanvas() {\n\t\treturn this.canvas;\n\t}\n\n\tgetMouseElement(event: MouseEvent): BaseModel {\n\t\treturn null;\n\t}\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n\t\tthis.model.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n","export class Toolkit {\n\tstatic TESTING: boolean = false;\n\tstatic TESTING_UID = 0;\n\n\t/**\n\t * Generats a unique ID (thanks Stack overflow :3)\n\t * @returns {String}\n\t */\n\tpublic static UID(): string {\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID++;\n\t\t\treturn `${Toolkit.TESTING_UID}`;\n\t\t}\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\tpublic static closest(element: Element, selector: string) {\n\t\tif (!Element.prototype.closest) {\n\t\t\tElement.prototype.closest = function(s) {\n\t\t\t\tvar el = this;\n\n\t\t\t\tdo {\n\t\t\t\t\tif (Element.prototype.matches.call(el, s)) return el;\n\t\t\t\t\tel = el.parentElement || el.parentNode;\n\t\t\t\t} while (el !== null && el.nodeType === 1);\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\t\treturn element.closest(selector);\n\t}\n}\n","import { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { KeyboardEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface DeleteItemsActionOptions {\n\tkeyCodes?: number[];\n\tmodifiers?: {\n\t\tctrlKey?: boolean;\n\t\tshiftKey?: boolean;\n\t\taltKey?: boolean;\n\t\tmetaKey?: boolean;\n\t};\n}\n\n/**\n * Deletes all selected items\n */\nexport class DeleteItemsAction extends Action {\n\tconstructor(options: DeleteItemsActionOptions = {}) {\n\t\tconst keyCodes = options.keyCodes || [46, 8];\n\t\tconst modifiers = {\n\t\t\tctrlKey: false,\n\t\t\tshiftKey: false,\n\t\t\taltKey: false,\n\t\t\tmetaKey: false,\n\t\t\t...options.modifiers\n\t\t};\n\n\t\tsuper({\n\t\t\ttype: InputType.KEY_DOWN,\n\t\t\tfire: (event: ActionEvent<KeyboardEvent>) => {\n\t\t\t\tconst { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\n\n\t\t\t\tif (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\n\t\t\t\t\t_.forEach(this.engine.getModel().getSelectedEntities(), (model) => {\n\t\t\t\t\t\t// only delete items which are not locked\n\t\t\t\t\t\tif (!model.isLocked()) {\n\t\t\t\t\t\t\tmodel.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { WheelEvent } from 'react';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\n\nexport interface ZoomCanvasActionOptions {\n\tinverseZoom?: boolean;\n}\n\nexport class ZoomCanvasAction extends Action {\n\tconstructor(options: ZoomCanvasActionOptions = {}) {\n\t\tsuper({\n\t\t\ttype: InputType.MOUSE_WHEEL,\n\t\t\tfire: (actionEvent: ActionEvent<WheelEvent>) => {\n\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t// we can block layer rendering because we are only targeting the transforms\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(false);\n\t\t\t\t}\n\n\t\t\t\tconst model = this.engine.getModel();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tconst oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\n\t\t\t\tlet scrollDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t//check if it is pinch gesture\n\t\t\t\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\n\t\t\t\t\t/*\n\t\t\t\t\t\tChrome and Firefox sends wheel event with deltaY that\n\t\t\t\t\t\thave fractional part, also `ctrlKey` prop of the event is true\n\t\t\t\t\t\tthough ctrl isn't pressed\n\t\t\t\t\t*/\n\t\t\t\t\tscrollDelta /= 3;\n\t\t\t\t} else {\n\t\t\t\t\tscrollDelta /= 60;\n\t\t\t\t}\n\t\t\t\tif (model.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\tmodel.setZoomLevel(model.getZoomLevel() + scrollDelta);\n\t\t\t\t}\n\n\t\t\t\tconst zoomFactor = model.getZoomLevel() / 100;\n\n\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t// compute width and height increment factor\n\t\t\t\tconst xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\tconst yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\tmodel.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\n\t\t\t\tthis.engine.repaintCanvas();\n\n\t\t\t\t// re-enable rendering\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { MouseEvent, KeyboardEvent, WheelEvent, TouchEvent, SyntheticEvent } from 'react';\nimport { Toolkit } from '../Toolkit';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport enum InputType {\n\tMOUSE_DOWN = 'mouse-down',\n\tMOUSE_UP = 'mouse-up',\n\tMOUSE_MOVE = 'mouse-move',\n\tMOUSE_WHEEL = 'mouse-wheel',\n\tKEY_DOWN = 'key-down',\n\tKEY_UP = 'key-up',\n\tTOUCH_START = 'touch-start',\n\tTOUCH_END = 'touch-end',\n\tTOUCH_MOVE = 'touch-move'\n}\n\nexport interface Mapping {\n\t[InputType.MOUSE_DOWN]: MouseEvent;\n\t[InputType.MOUSE_UP]: MouseEvent;\n\t[InputType.MOUSE_MOVE]: MouseEvent;\n\t[InputType.MOUSE_WHEEL]: WheelEvent;\n\t[InputType.KEY_DOWN]: KeyboardEvent;\n\t[InputType.KEY_UP]: KeyboardEvent;\n\t[InputType.TOUCH_START]: TouchEvent;\n\t[InputType.TOUCH_END]: TouchEvent;\n\t[InputType.TOUCH_MOVE]: TouchEvent;\n}\n\nexport interface ActionEvent<Event extends SyntheticEvent = SyntheticEvent, Model extends BaseModel = BaseModel> {\n\tevent: Event;\n\tmodel?: Model;\n}\n\nexport interface ActionOptions {\n\ttype: InputType;\n\tfire: (event: ActionEvent<Mapping[this['type']]>) => void;\n}\n\nexport class Action<T extends CanvasEngine = CanvasEngine> {\n\toptions: ActionOptions;\n\tid: string;\n\tengine: T;\n\n\tconstructor(options: ActionOptions) {\n\t\tthis.options = options;\n\t\tthis.id = Toolkit.UID();\n\t}\n\n\tsetEngine(engine: T) {\n\t\tthis.engine = engine;\n\t}\n}\n","import { Action, ActionEvent, InputType } from './Action';\nimport { KeyboardEvent, MouseEvent } from 'react';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport class ActionEventBus {\n\tprotected actions: { [id: string]: Action };\n\tprotected engine: CanvasEngine;\n\tprotected keys: { [key: string]: boolean };\n\n\tconstructor(engine: CanvasEngine) {\n\t\tthis.actions = {};\n\t\tthis.engine = engine;\n\t\tthis.keys = {};\n\t}\n\n\tgetKeys(): string[] {\n\t\treturn _.keys(this.keys);\n\t}\n\n\tregisterAction(action: Action): () => void {\n\t\taction.setEngine(this.engine);\n\t\tthis.actions[action.id] = action;\n\t\treturn () => {\n\t\t\tthis.deregisterAction(action);\n\t\t};\n\t}\n\n\tderegisterAction(action: Action) {\n\t\taction.setEngine(null);\n\t\tdelete this.actions[action.id];\n\t}\n\n\tgetActionsForType(type: InputType): Action[] {\n\t\treturn _.filter(this.actions, (action) => {\n\t\t\treturn action.options.type === type;\n\t\t});\n\t}\n\n\tgetModelForEvent(actionEvent: ActionEvent<MouseEvent>): BaseModel {\n\t\tif (actionEvent.model) {\n\t\t\treturn actionEvent.model;\n\t\t}\n\t\treturn this.engine.getMouseElement(actionEvent.event);\n\t}\n\n\tgetActionsForEvent(actionEvent: ActionEvent): Action[] {\n\t\tconst { event } = actionEvent;\n\t\tif (event.type === 'mousedown') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_DOWN);\n\t\t} else if (event.type === 'mouseup') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_UP);\n\t\t} else if (event.type === 'keydown') {\n\t\t\t// store the recorded key\n\t\t\tthis.keys[(event as KeyboardEvent).key.toLowerCase()] = true;\n\t\t\treturn this.getActionsForType(InputType.KEY_DOWN);\n\t\t} else if (event.type === 'keyup') {\n\t\t\t// delete the recorded key\n\t\t\tdelete this.keys[(event as KeyboardEvent).key.toLowerCase()];\n\t\t\treturn this.getActionsForType(InputType.KEY_UP);\n\t\t} else if (event.type === 'mousemove') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_MOVE);\n\t\t} else if (event.type === 'wheel') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_WHEEL);\n\t\t} else if (event.type === 'touchstart') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_START);\n\t\t} else if (event.type === 'touchend') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_END);\n\t\t} else if (event.type === 'touchmove') {\n\t\t\treturn this.getActionsForType(InputType.TOUCH_MOVE);\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tfireAction(actionEvent: ActionEvent) {\n\t\tconst actions = this.getActionsForEvent(actionEvent);\n\t\tfor (let action of actions) {\n\t\t\taction.options.fire(actionEvent as any);\n\t\t}\n\t}\n}\n","import { Toolkit } from '../Toolkit';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\nimport { AbstractModelFactory } from '../core/AbstractModelFactory';\nimport { BaseModel } from './BaseModel';\n\nexport interface BaseEntityEvent<T extends BaseEntity = BaseEntity> extends BaseEvent {\n\tentity: T;\n}\n\nexport interface BaseEntityListener<T extends BaseEntity = BaseEntity> extends BaseListener {\n\tlockChanged?(event: BaseEntityEvent<T> & { locked: boolean }): void;\n}\n\nexport type BaseEntityType = 'node' | 'link' | 'port' | 'point';\n\nexport interface BaseEntityOptions {\n\tid?: string;\n\tlocked?: boolean;\n}\n\nexport type BaseEntityGenerics = {\n\tLISTENER: BaseEntityListener;\n\tOPTIONS: BaseEntityOptions;\n};\n\nexport interface DeserializeEvent<T extends BaseEntity = BaseEntity> {\n\tengine: CanvasEngine;\n\tdata: ReturnType<T['serialize']>;\n\tregisterModel(model: BaseModel);\n\tgetModel<T extends BaseModel>(id: string): Promise<T>;\n}\n\nexport class BaseEntity<T extends BaseEntityGenerics = BaseEntityGenerics> extends BaseObserver<T['LISTENER']> {\n\tprotected options: T['OPTIONS'];\n\n\tconstructor(options: T['OPTIONS'] = {}) {\n\t\tsuper();\n\t\tthis.options = {\n\t\t\tid: Toolkit.UID(),\n\t\t\t...options\n\t\t};\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\tgetID() {\n\t\treturn this.options.id;\n\t}\n\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\n\t\t/*noop*/\n\t}\n\n\tclone(lookupTable: { [s: string]: any } = {}) {\n\t\t// try and use an existing clone first\n\t\tif (lookupTable[this.options.id]) {\n\t\t\treturn lookupTable[this.options.id];\n\t\t}\n\t\tlet clone = _.cloneDeep(this);\n\t\tclone.options = {\n\t\t\t...this.options,\n\t\t\tid: Toolkit.UID()\n\t\t};\n\t\tclone.clearListeners();\n\t\tlookupTable[this.options.id] = clone;\n\n\t\tthis.doClone(lookupTable, clone);\n\t\treturn clone;\n\t}\n\n\tclearListeners() {\n\t\tthis.listeners = {};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tthis.options.id = event.data.id;\n\t\tthis.options.locked = event.data.locked;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\tid: this.options.id,\n\t\t\tlocked: this.options.locked\n\t\t};\n\t}\n\n\tfireEvent<L extends Partial<BaseEntityEvent> & object>(event: L, k: keyof T['LISTENER']) {\n\t\tsuper.fireEvent(\n\t\t\t{\n\t\t\t\tentity: this,\n\t\t\t\t...event\n\t\t\t},\n\t\t\tk\n\t\t);\n\t}\n\n\tpublic isLocked(): boolean {\n\t\treturn this.options.locked;\n\t}\n\n\tpublic setLocked(locked: boolean = true) {\n\t\tthis.options.locked = locked;\n\t\tthis.fireEvent(\n\t\t\t{\n\t\t\t\tlocked: locked\n\t\t\t},\n\t\t\t'lockChanged'\n\t\t);\n\t}\n}\n","import {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from './BaseEntity';\nimport { CanvasModel } from '../entities/canvas/CanvasModel';\n\nexport interface BaseModelListener extends BaseEntityListener {\n\tselectionChanged?(event: BaseEntityEvent<BaseModel> & { isSelected: boolean }): void;\n\n\tentityRemoved?(event: BaseEntityEvent<BaseModel>): void;\n}\n\nexport interface BaseModelOptions extends BaseEntityOptions {\n\ttype?: string;\n\tselected?: boolean;\n\textras?: any;\n}\n\nexport interface BaseModelGenerics extends BaseEntityGenerics {\n\tLISTENER: BaseModelListener;\n\tPARENT: BaseEntity;\n\tOPTIONS: BaseModelOptions;\n}\n\nexport class BaseModel<G extends BaseModelGenerics = BaseModelGenerics> extends BaseEntity<G> {\n\tprotected parent: G['PARENT'];\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t}\n\n\tperformanceTune() {\n\t\treturn true;\n\t}\n\n\tgetParentCanvasModel(): CanvasModel {\n\t\tif (!this.parent) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.parent instanceof CanvasModel) {\n\t\t\treturn this.parent;\n\t\t} else if (this.parent instanceof BaseModel) {\n\t\t\treturn this.parent.getParentCanvasModel();\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetParent(): G['PARENT'] {\n\t\treturn this.parent;\n\t}\n\n\tsetParent(parent: G['PARENT']) {\n\t\tthis.parent = parent;\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\treturn [this];\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\ttype: this.options.type,\n\t\t\tselected: this.options.selected,\n\t\t\textras: this.options.extras\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.extras = event.data.extras;\n\t\tthis.options.selected = event.data.selected;\n\t}\n\n\tgetType(): string {\n\t\treturn this.options.type;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn this.options.selected;\n\t}\n\n\tisLocked(): boolean {\n\t\tconst locked = super.isLocked();\n\t\tif (locked) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// delegate this call up to the parent\n\t\tif (this.parent) {\n\t\t\treturn this.parent.isLocked();\n\t\t}\n\t\treturn false;\n\t}\n\n\tsetSelected(selected: boolean = true) {\n\t\tif (this.options.selected !== selected) {\n\t\t\tthis.options.selected = selected;\n\n\t\t\tthis.fireEvent(\n\t\t\t\t{\n\t\t\t\t\tisSelected: selected\n\t\t\t\t},\n\t\t\t\t'selectionChanged'\n\t\t\t);\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.fireEvent({}, 'entityRemoved');\n\t}\n}\n","import { BaseModel, BaseModelGenerics, BaseModelListener, BaseModelOptions } from './BaseModel';\nimport { BaseEntityEvent, DeserializeEvent } from './BaseEntity';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport interface BasePositionModelListener extends BaseModelListener {\n\tpositionChanged?(event: BaseEntityEvent<BasePositionModel>): void;\n}\n\nexport interface BasePositionModelOptions extends BaseModelOptions {\n\tposition?: Point;\n}\n\nexport interface BasePositionModelGenerics extends BaseModelGenerics {\n\tLISTENER: BasePositionModelListener;\n\tOPTIONS: BasePositionModelOptions;\n}\n\nexport class BasePositionModel<G extends BasePositionModelGenerics = BasePositionModelGenerics>\n\textends BaseModel<G>\n\timplements ModelGeometryInterface\n{\n\tprotected position: Point;\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t\tthis.position = options.position || new Point(0, 0);\n\t}\n\n\tsetPosition(point: Point);\n\tsetPosition(x: number, y: number);\n\tsetPosition(x, y?) {\n\t\tif (typeof x === 'object') {\n\t\t\tthis.position = x;\n\t\t} else if (typeof x) {\n\t\t\tthis.position = new Point(x, y);\n\t\t}\n\t\tthis.fireEvent({}, 'positionChanged');\n\t}\n\n\tgetBoundingBox(): Rectangle {\n\t\treturn new Rectangle(this.position, 0, 0);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.position = new Point(event.data.x, event.data.y);\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tx: this.position.x,\n\t\t\ty: this.position.y\n\t\t};\n\t}\n\n\tgetPosition(): Point {\n\t\treturn this.position;\n\t}\n\n\tgetX() {\n\t\treturn this.position.x;\n\t}\n\n\tgetY() {\n\t\treturn this.position.y;\n\t}\n}\n","import { State, StateOptions } from './State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface AbstractDisplacementStateEvent {\n\tdisplacementX: number;\n\tdisplacementY: number;\n\tvirtualDisplacementX: number;\n\tvirtualDisplacementY: number;\n\tevent: React.MouseEvent | React.TouchEvent;\n}\n\nexport abstract class AbstractDisplacementState<E extends CanvasEngine = CanvasEngine> extends State<E> {\n\tinitialX: number;\n\tinitialY: number;\n\tinitialXRelative: number;\n\tinitialYRelative: number;\n\n\tconstructor(options: StateOptions) {\n\t\tsuper(options);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { clientX, clientY } = actionEvent.event;\n\t\t\t\t\tthis.handleMoveStart(clientX, clientY);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\n\t\t\t\t\tif (event.buttons === 0) {\n\t\t\t\t\t\t// If buttons is 0, it means the mouse is not down, the user may have released it\n\t\t\t\t\t\t// outside of the canvas, then we eject the state\n\t\t\t\t\t\tthis.eject();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { clientX, clientY } = event;\n\t\t\t\t\tthis.handleMove(clientX, clientY, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: () => this.handleMoveEnd()\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.TouchEvent>) => {\n\t\t\t\t\tconst { clientX, clientY } = actionEvent.event.touches[0];\n\t\t\t\t\tthis.handleMoveStart(clientX, clientY);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.TouchEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t\tconst { clientX, clientY } = event.touches[0];\n\t\t\t\t\tthis.handleMove(clientX, clientY, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_END,\n\t\t\t\tfire: () => this.handleMoveEnd()\n\t\t\t})\n\t\t);\n\t}\n\n\tprotected handleMoveStart(x: number, y: number): void {\n\t\tthis.initialX = x;\n\t\tthis.initialY = y;\n\t\tconst rel = this.engine.getRelativePoint(x, y);\n\t\tthis.initialXRelative = rel.x;\n\t\tthis.initialYRelative = rel.y;\n\t}\n\n\tprotected handleMove(x: number, y: number, event: React.MouseEvent | React.TouchEvent): void {\n\t\tthis.fireMouseMoved({\n\t\t\tdisplacementX: x - this.initialX,\n\t\t\tdisplacementY: y - this.initialY,\n\t\t\tvirtualDisplacementX: (x - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\tvirtualDisplacementY: (y - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\tevent\n\t\t});\n\t}\n\n\tprotected handleMoveEnd(): void {\n\t\tthis.eject();\n\t}\n\n\tabstract fireMouseMoved(event: AbstractDisplacementStateEvent);\n}\n","import { CanvasEngine } from '../CanvasEngine';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SyntheticEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface StateOptions {\n\tname: string;\n}\n\nexport abstract class State<E extends CanvasEngine = CanvasEngine> {\n\tprotected engine: E;\n\tprotected actions: Action[];\n\tprotected keys: string[];\n\tprotected options: StateOptions;\n\tprotected childStates: State[];\n\n\tprivate handler1;\n\tprivate handler2;\n\n\tconstructor(options: StateOptions) {\n\t\tthis.actions = [];\n\t\tthis.keys = [];\n\t\tthis.childStates = [];\n\t\tthis.options = options;\n\t}\n\n\tsetEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\teject() {\n\t\tthis.engine.getStateMachine().popState();\n\t}\n\n\ttransitionWithEvent(state: State, event: ActionEvent<SyntheticEvent>) {\n\t\tthis.engine.getStateMachine().pushState(state);\n\t\tthis.engine.getActionEventBus().fireAction(event);\n\t}\n\n\tregisterAction(action: Action) {\n\t\tthis.actions.push(action);\n\t}\n\n\ttryActivateParentState(keys: string[]) {\n\t\tif (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n\t\t\tthis.eject();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\ttryActivateChildState(keys: string[]) {\n\t\tconst state = this.findStateToActivate(keys);\n\t\tif (state) {\n\t\t\tthis.engine.getStateMachine().pushState(state);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindStateToActivate(keys: string[]) {\n\t\tfor (let child of this.childStates) {\n\t\t\tif (child.isKeysFullfilled(keys)) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisKeysFullfilled(keys: string[]) {\n\t\treturn _.intersection(this.keys, keys).length === this.keys.length;\n\t}\n\n\tactivated(previous: State) {\n\t\tconst keys = this.engine.getActionEventBus().getKeys();\n\n\t\tif (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// perhaps we need to pop again?\n\t\tthis.handler1 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_DOWN,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.handler2 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_UP,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().registerAction(action);\n\t\t}\n\t}\n\n\tdeactivated(next: State) {\n\t\tif (this.handler1) {\n\t\t\tthis.handler1();\n\t\t}\n\t\tif (this.handler2) {\n\t\t\tthis.handler2();\n\t\t}\n\t\t// if this happens, we are going into heirachial state machine mode\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().deregisterAction(action);\n\t\t}\n\t}\n}\n","import { State } from './State';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\n\nexport interface StateMachineListener extends BaseListener {\n\tstateChanged?: (event: BaseEvent & { newState: State }) => any;\n}\n\nexport class StateMachine extends BaseObserver<StateMachineListener> {\n\tprotected currentState: State;\n\tprotected stateStack: State[];\n\tprotected engine: CanvasEngine;\n\n\tconstructor(engine: CanvasEngine) {\n\t\tsuper();\n\t\tthis.engine = engine;\n\t\tthis.stateStack = [];\n\t}\n\n\tgetCurrentState() {\n\t\treturn this.currentState;\n\t}\n\n\tpushState(state: State) {\n\t\tthis.stateStack.push(state);\n\t\tthis.setState(state);\n\t}\n\n\tpopState() {\n\t\tthis.stateStack.pop();\n\t\tthis.setState(_.last(this.stateStack));\n\t}\n\n\tsetState(state: State) {\n\t\tstate.setEngine(this.engine);\n\n\t\t// if no state object, get the initial state\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.deactivated(state);\n\t\t}\n\t\tconst old = this.currentState;\n\t\tthis.currentState = state;\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.activated(old);\n\t\t\tthis.fireEvent<'stateChanged'>(\n\t\t\t\t{\n\t\t\t\t\tnewState: state\n\t\t\t\t},\n\t\t\t\t'stateChanged'\n\t\t\t);\n\t\t}\n\t}\n}\n","import { CanvasEngine } from '../CanvasEngine';\nimport { FactoryBank } from './FactoryBank';\n\n/**\n * Base factory for all the different types of entities.\n * Gets registered with the engine, and is used to generate models\n */\nexport abstract class AbstractFactory<E extends CanvasEngine = CanvasEngine> {\n\t/**\n\t * Couples the factory with the models it generates\n\t */\n\tprotected type: string;\n\t/**\n\t * The engine gets injected when the factory is registered\n\t */\n\tprotected engine: E;\n\tprotected bank: FactoryBank;\n\n\tconstructor(type: string) {\n\t\tthis.type = type;\n\t}\n\n\tsetDiagramEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tsetFactoryBank(bank: FactoryBank) {\n\t\tthis.bank = bank;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n}\n","import { AbstractFactory } from './AbstractFactory';\nimport { BaseModel } from '../core-models/BaseModel';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface GenerateModelEvent {\n\tinitialConfig?: any;\n}\n\nexport abstract class AbstractModelFactory<\n\tT extends BaseModel = BaseModel,\n\tE extends CanvasEngine = CanvasEngine\n> extends AbstractFactory<E> {\n\t/**\n\t * Generates new models (the core factory pattern)\n\t */\n\tabstract generateModel(event: GenerateModelEvent): T;\n}\n","import { BaseModel } from '../core-models/BaseModel';\nimport { AbstractModelFactory } from './AbstractModelFactory';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface GenerateWidgetEvent<T extends BaseModel> {\n\tmodel: T;\n}\n\n/**\n * Further extends the AbstractFactory to add widget generation capability.\n */\nexport abstract class AbstractReactFactory<\n\tT extends BaseModel = BaseModel,\n\tE extends CanvasEngine = CanvasEngine\n> extends AbstractModelFactory<T, E> {\n\t/**\n\t * Generates React widgets from the model contained in the event object\n\t */\n\tabstract generateReactWidget(event: GenerateWidgetEvent<T>): JSX.Element;\n}\n","import { Toolkit } from '../Toolkit';\n\nexport interface BaseEvent {\n\tfiring: boolean;\n\tstopPropagation: () => any;\n}\n\nexport interface BaseEventProxy extends BaseEvent {\n\tfunction: string;\n}\n\n/**\n * Listeners are always in the form of an object that contains methods that take events\n */\nexport type BaseListener = {\n\t/**\n\t * Generic event that fires before a specific event was fired\n\t */\n\teventWillFire?: (event: BaseEvent & { function: string }) => void;\n\n\t/**\n\t * Generic event that fires after a specific event was fired (even if it was consumed)\n\t */\n\teventDidFire?: (event: BaseEvent & { function: string }) => void;\n\t/**\n\t * Type for other events that will fire\n\t */\n\t[key: string]: (event: BaseEvent) => any;\n};\n\nexport interface ListenerHandle {\n\t/**\n\t * Used to degister the listener\n\t */\n\tderegister: () => any;\n\t/**\n\t * Original ID of the listener\n\t */\n\tid: string;\n\n\t/**\n\t * Original Listener\n\t */\n\tlistener: BaseListener;\n}\n\n/**\n * Base observer pattern class for working with listeners\n */\nexport class BaseObserver<L extends BaseListener = BaseListener> {\n\tprotected listeners: { [id: string]: L };\n\n\tconstructor() {\n\t\tthis.listeners = {};\n\t}\n\n\tprivate fireEventInternal(fire: boolean, k: keyof L, event: BaseEvent) {\n\t\tthis.iterateListeners((listener) => {\n\t\t\t// returning false here will instruct itteration to stop\n\t\t\tif (!fire && !event.firing) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// fire selected listener\n\t\t\tif (listener[k]) {\n\t\t\t\tlistener[k](event as BaseEvent);\n\t\t\t}\n\t\t});\n\t}\n\n\tfireEvent<K extends keyof L>(event: Partial<Parameters<L[K]>[0]>, k: keyof L) {\n\t\tevent = {\n\t\t\tfiring: true,\n\t\t\tstopPropagation: () => {\n\t\t\t\tevent.firing = false;\n\t\t\t},\n\t\t\t...event\n\t\t};\n\n\t\t// fire pre\n\t\tthis.fireEventInternal(true, 'eventWillFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\n\t\t// fire main event\n\t\tthis.fireEventInternal(false, k, event as BaseEvent);\n\n\t\t// fire post\n\t\tthis.fireEventInternal(true, 'eventDidFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\t}\n\n\titerateListeners(cb: (listener: L) => any) {\n\t\tfor (let id in this.listeners) {\n\t\t\tconst res = cb(this.listeners[id]);\n\t\t\t// cancel itteration on false\n\t\t\tif (res === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetListenerHandle(listener: L): ListenerHandle {\n\t\tfor (let id in this.listeners) {\n\t\t\tif (this.listeners[id] === listener) {\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tlistener: listener,\n\t\t\t\t\tderegister: () => {\n\t\t\t\t\t\tdelete this.listeners[id];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tregisterListener(listener: L): ListenerHandle {\n\t\tconst id = Toolkit.UID();\n\t\tthis.listeners[id] = listener;\n\t\treturn {\n\t\t\tid: id,\n\t\t\tlistener: listener,\n\t\t\tderegister: () => {\n\t\t\t\tdelete this.listeners[id];\n\t\t\t}\n\t\t};\n\t}\n\n\tderegisterListener(listener: L | ListenerHandle) {\n\t\tif (typeof listener === 'object') {\n\t\t\t(listener as ListenerHandle).deregister();\n\t\t\treturn true;\n\t\t}\n\t\tconst handle = this.getListenerHandle(listener);\n\t\tif (handle) {\n\t\t\thandle.deregister();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { BaseEvent, BaseListener, BaseObserver } from './BaseObserver';\nimport { AbstractFactory } from './AbstractFactory';\nimport * as _ from 'lodash';\n\nexport interface FactoryBankListener<F extends AbstractFactory = AbstractFactory> extends BaseListener {\n\t/**\n\t * Factory as added to rhe bank\n\t */\n\tfactoryAdded?: (event: BaseEvent & { factory: F }) => any;\n\n\t/**\n\t * Factory was removed from the bank\n\t */\n\tfactoryRemoved?: (event: BaseEvent & { factory: F }) => any;\n}\n\n/**\n * Store and managed Factories that extend from Abstractfactory\n */\nexport class FactoryBank<\n\tF extends AbstractFactory = AbstractFactory,\n\tL extends FactoryBankListener<F> = FactoryBankListener<F>\n> extends BaseObserver<L> {\n\tprotected factories: { [type: string]: F };\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.factories = {};\n\t}\n\n\tgetFactories(): F[] {\n\t\treturn _.values(this.factories);\n\t}\n\n\tclearFactories() {\n\t\tfor (let factory in this.factories) {\n\t\t\tthis.deregisterFactory(factory);\n\t\t}\n\t}\n\n\tgetFactory<T extends F = F>(type: string): T {\n\t\tif (!this.factories[type]) {\n\t\t\tthrow new Error(`Cannot find factory with type [${type}]`);\n\t\t}\n\t\treturn this.factories[type] as T;\n\t}\n\n\tregisterFactory(factory: F) {\n\t\tfactory.setFactoryBank(this);\n\t\tthis.factories[factory.getType()] = factory;\n\t\t// todo fixme\n\t\tthis.fireEvent<'factoryAdded'>({ factory } as any, 'factoryAdded');\n\t}\n\n\tderegisterFactory(type: string) {\n\t\tconst factory = this.factories[type];\n\t\tfactory.setFactoryBank(null);\n\t\tdelete this.factories[type];\n\t\t// todo fixme\n\t\tthis.fireEvent<'factoryRemoved'>({ factory } as any, 'factoryRemoved');\n\t}\n}\n","import * as _ from 'lodash';\nimport {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from '../../core-models/BaseEntity';\nimport { LayerModel } from '../layer/LayerModel';\nimport { BaseModel } from '../../core-models/BaseModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface DiagramListener extends BaseEntityListener {\n\toffsetUpdated?(event: BaseEntityEvent<CanvasModel> & { offsetX: number; offsetY: number }): void;\n\n\tzoomUpdated?(event: BaseEntityEvent<CanvasModel> & { zoom: number }): void;\n\n\tgridUpdated?(event: BaseEntityEvent<CanvasModel> & { size: number }): void;\n}\n\nexport interface DiagramModelOptions extends BaseEntityOptions {\n\toffsetX?: number;\n\toffsetY?: number;\n\tzoom?: number;\n\tgridSize?: number;\n}\n\nexport interface CanvasModelGenerics extends BaseEntityGenerics {\n\tLISTENER: DiagramListener;\n\tOPTIONS: DiagramModelOptions;\n\tLAYER: LayerModel;\n}\n\nexport class CanvasModel<G extends CanvasModelGenerics = CanvasModelGenerics> extends BaseEntity<G> {\n\tprotected layers: G['LAYER'][];\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper({\n\t\t\tzoom: 100,\n\t\t\tgridSize: 0,\n\t\t\toffsetX: 0,\n\t\t\toffsetY: 0,\n\t\t\t...options\n\t\t});\n\t\tthis.layers = [];\n\t}\n\n\tgetSelectionEntities(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn layer.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetSelectedEntities(): BaseModel[] {\n\t\treturn _.filter(this.getSelectionEntities(), (ob) => {\n\t\t\treturn ob.isSelected();\n\t\t});\n\t}\n\n\tclearSelection() {\n\t\t_.forEach(this.getSelectedEntities(), (element) => {\n\t\t\telement.setSelected(false);\n\t\t});\n\t}\n\n\tgetModels(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn _.values(layer.getModels());\n\t\t});\n\t}\n\n\taddLayer(layer: LayerModel) {\n\t\tlayer.setParent(this);\n\t\tlayer.registerListener({\n\t\t\tentityRemoved: (event: BaseEntityEvent<BaseModel>): void => {}\n\t\t});\n\t\tthis.layers.push(layer);\n\t}\n\n\tremoveLayer(layer: LayerModel) {\n\t\tconst index = this.layers.indexOf(layer);\n\t\tif (index !== -1) {\n\t\t\tthis.layers.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetLayers() {\n\t\treturn this.layers;\n\t}\n\n\tsetGridSize(size: number = 0) {\n\t\tthis.options.gridSize = size;\n\t\tthis.fireEvent({ size: size }, 'gridUpdated');\n\t}\n\n\tgetGridPosition(pos: number) {\n\t\tif (this.options.gridSize === 0) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn this.options.gridSize * Math.floor((pos + this.options.gridSize / 2) / this.options.gridSize);\n\t}\n\n\tdeserializeModel(data: ReturnType<this['serialize']>, engine: CanvasEngine) {\n\t\tconst models: {\n\t\t\t[id: string]: BaseModel;\n\t\t} = {};\n\t\tconst promises: {\n\t\t\t[id: string]: Promise<BaseModel>;\n\t\t} = {};\n\t\tconst resolvers: {\n\t\t\t[id: string]: (model: BaseModel) => any;\n\t\t} = {};\n\n\t\tconst event: DeserializeEvent = {\n\t\t\tdata: data,\n\t\t\tengine: engine,\n\t\t\tregisterModel: (model: BaseModel) => {\n\t\t\t\tmodels[model.getID()] = model;\n\t\t\t\tif (resolvers[model.getID()]) {\n\t\t\t\t\tresolvers[model.getID()](model);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetModel<T extends BaseModel>(id: string): Promise<T> {\n\t\t\t\tif (models[id]) {\n\t\t\t\t\treturn Promise.resolve(models[id]) as Promise<T>;\n\t\t\t\t}\n\t\t\t\tif (!promises[id]) {\n\t\t\t\t\tpromises[id] = new Promise((resolve) => {\n\t\t\t\t\t\tresolvers[id] = resolve;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn promises[id] as Promise<T>;\n\t\t\t}\n\t\t};\n\t\tthis.deserialize(event);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.offsetX = event.data.offsetX;\n\t\tthis.options.offsetY = event.data.offsetY;\n\t\tthis.options.zoom = event.data.zoom;\n\t\tthis.options.gridSize = event.data.gridSize;\n\t\t_.forEach(event.data.layers, (layer) => {\n\t\t\tconst layerOb = event.engine.getFactoryForLayer(layer.type).generateModel({\n\t\t\t\tinitialConfig: layer\n\t\t\t});\n\t\t\tlayerOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: layer\n\t\t\t});\n\t\t\tthis.addLayer(layerOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\toffsetX: this.options.offsetX,\n\t\t\toffsetY: this.options.offsetY,\n\t\t\tzoom: this.options.zoom,\n\t\t\tgridSize: this.options.gridSize,\n\t\t\tlayers: _.map(this.layers, (layer) => {\n\t\t\t\treturn layer.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tsetZoomLevel(zoom: number) {\n\t\tthis.options.zoom = zoom;\n\t\tthis.fireEvent({ zoom }, 'zoomUpdated');\n\t}\n\n\tsetOffset(offsetX: number, offsetY: number) {\n\t\tthis.options.offsetX = offsetX;\n\t\tthis.options.offsetY = offsetY;\n\t\tthis.fireEvent({ offsetX, offsetY }, 'offsetUpdated');\n\t}\n\n\tsetOffsetX(offsetX: number) {\n\t\tthis.setOffset(offsetX, this.options.offsetY);\n\t}\n\n\tsetOffsetY(offsetY: number) {\n\t\tthis.setOffset(this.options.offsetX, offsetY);\n\t}\n\n\tgetOffsetY() {\n\t\treturn this.options.offsetY;\n\t}\n\n\tgetOffsetX() {\n\t\treturn this.options.offsetX;\n\t}\n\n\tgetZoomLevel() {\n\t\treturn this.options.zoom;\n\t}\n}\n","import * as React from 'react';\nimport { CanvasEngine } from '../../CanvasEngine';\nimport { TransformLayerWidget } from '../layer/TransformLayerWidget';\nimport styled from '@emotion/styled';\nimport { SmartLayerWidget } from '../layer/SmartLayerWidget';\n\nexport interface DiagramProps {\n\tengine: CanvasEngine;\n\tclassName?: string;\n}\n\nnamespace S {\n\texport const Canvas = styled.div`\n\t\tposition: relative;\n\t\tcursor: move;\n\t\toverflow: hidden;\n\t`;\n}\n\nexport class CanvasWidget extends React.Component<DiagramProps> {\n\tref: React.RefObject<HTMLDivElement>;\n\tkeyUp: any;\n\tkeyDown: any;\n\tcanvasListener: any;\n\n\tconstructor(props: DiagramProps) {\n\t\tsuper(props);\n\n\t\tthis.ref = React.createRef();\n\t\tthis.state = {\n\t\t\taction: null,\n\t\t\tdiagramEngineListener: null\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.engine.deregisterListener(this.canvasListener);\n\t\tthis.props.engine.setCanvas(null);\n\n\t\tdocument.removeEventListener('keyup', this.keyUp);\n\t\tdocument.removeEventListener('keydown', this.keyDown);\n\t}\n\n\tregisterCanvas() {\n\t\tthis.props.engine.setCanvas(this.ref.current);\n\t\tthis.props.engine.iterateListeners((list) => {\n\t\t\tlist.rendered && list.rendered();\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.registerCanvas();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.canvasListener = this.props.engine.registerListener({\n\t\t\trepaintCanvas: () => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\n\t\tthis.keyDown = (event) => {\n\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t};\n\t\tthis.keyUp = (event) => {\n\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t};\n\n\t\tdocument.addEventListener('keyup', this.keyUp);\n\t\tdocument.addEventListener('keydown', this.keyDown);\n\t\tthis.registerCanvas();\n\t}\n\n\trender() {\n\t\tconst engine = this.props.engine;\n\t\tconst model = engine.getModel();\n\n\t\treturn (\n\t\t\t<S.Canvas\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tref={this.ref}\n\t\t\t\tonWheel={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseDown={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseUp={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseMove={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchStart={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchEnd={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonTouchMove={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}>\n\t\t\t\t{model.getLayers().map((layer) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TransformLayerWidget layer={layer} key={layer.getID()}>\n\t\t\t\t\t\t\t<SmartLayerWidget layer={layer} engine={this.props.engine} key={layer.getID()} />\n\t\t\t\t\t\t</TransformLayerWidget>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</S.Canvas>\n\t\t);\n\t}\n}\n","import { BaseModel, BaseModelGenerics, BaseModelOptions } from '../../core-models/BaseModel';\nimport { CanvasModel } from '../canvas/CanvasModel';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../../CanvasEngine';\nimport { FactoryBank } from '../../core/FactoryBank';\nimport { AbstractModelFactory } from '../../core/AbstractModelFactory';\nimport { DeserializeEvent } from '../../core-models/BaseEntity';\n\nexport interface LayerModelOptions extends BaseModelOptions {\n\tisSvg?: boolean;\n\ttransformed?: boolean;\n}\n\nexport interface LayerModelGenerics extends BaseModelGenerics {\n\tOPTIONS: LayerModelOptions;\n\tPARENT: CanvasModel;\n\tCHILDREN: BaseModel;\n\tENGINE: CanvasEngine;\n}\n\nexport abstract class LayerModel<G extends LayerModelGenerics = LayerModelGenerics> extends BaseModel<G> {\n\tprotected models: { [id: string]: G['CHILDREN'] };\n\tprotected repaintEnabled: boolean;\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper(options);\n\t\tthis.models = {};\n\t\tthis.repaintEnabled = true;\n\t}\n\n\t/**\n\t * This is used for deserialization\n\t */\n\tabstract getChildModelFactoryBank(engine: G['ENGINE']): FactoryBank<AbstractModelFactory<BaseModel>>;\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.isSvg = !!event.data.isSvg;\n\t\tthis.options.transformed = !!event.data.transformed;\n\t\t_.forEach(event.data.models, (model) => {\n\t\t\tconst modelOb = this.getChildModelFactoryBank(event.engine).getFactory(model.type).generateModel({\n\t\t\t\tinitialConfig: model\n\t\t\t});\n\t\t\tmodelOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: model\n\t\t\t});\n\t\t\tthis.addModel(modelOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tisSvg: this.options.isSvg,\n\t\t\ttransformed: this.options.transformed,\n\t\t\tmodels: _.mapValues(this.models, (model) => {\n\t\t\t\treturn model.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tisRepaintEnabled() {\n\t\treturn this.repaintEnabled;\n\t}\n\n\tallowRepaint(allow: boolean = true) {\n\t\tthis.repaintEnabled = allow;\n\t}\n\n\tremove() {\n\t\tif (this.parent) {\n\t\t\tthis.parent.removeLayer(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\taddModel(model: G['CHILDREN']) {\n\t\tmodel.setParent(this);\n\t\tthis.models[model.getID()] = model;\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\treturn _.flatMap(this.models, (model) => {\n\t\t\treturn model.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetModels() {\n\t\treturn this.models;\n\t}\n\n\tgetModel(id: string) {\n\t\treturn this.models[id];\n\t}\n\n\tremoveModel(id: string | G['CHILDREN']): boolean {\n\t\tconst _id = typeof id === 'string' ? id : id.getID();\n\t\tif (this.models[_id]) {\n\t\t\tdelete this.models[_id];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import * as React from 'react';\nimport { LayerModel } from './LayerModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface SmartLayerWidgetProps {\n\tlayer: LayerModel;\n\tengine: CanvasEngine;\n}\n\nexport class SmartLayerWidget extends React.Component<SmartLayerWidgetProps> {\n\tshouldComponentUpdate(): boolean {\n\t\treturn this.props.layer.isRepaintEnabled();\n\t}\n\n\trender() {\n\t\treturn this.props.engine.getFactoryForLayer(this.props.layer).generateReactWidget({ model: this.props.layer });\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { CSSProperties } from 'react';\nimport { LayerModel } from './LayerModel';\nimport { css } from '@emotion/react';\n\nexport interface TransformLayerWidgetProps {\n\tlayer: LayerModel;\n}\n\nnamespace S {\n\tconst shared = css`\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tposition: absolute;\n\t\tpointer-events: none;\n\t\ttransform-origin: 0 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t`;\n\n\texport const DivLayer = styled.div`\n\t\t${shared}\n\t`;\n\n\texport const SvgLayer = styled.svg`\n\t\t${shared}\n\t`;\n}\n\nexport class TransformLayerWidget extends React.Component<TransformLayerWidgetProps> {\n\tconstructor(props: TransformLayerWidgetProps) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tgetTransform() {\n\t\tconst model = this.props.layer.getParent();\n\t\treturn `\n\t\t\ttranslate(\n\t\t\t\t${model.getOffsetX()}px,\n\t\t\t\t${model.getOffsetY()}px)\n\t\t\tscale(\n\t\t\t\t${model.getZoomLevel() / 100.0}\n\t\t\t)\n  \t`;\n\t}\n\n\tgetTransformStyle(): CSSProperties {\n\t\tif (this.props.layer.getOptions().transformed) {\n\t\t\treturn {\n\t\t\t\ttransform: this.getTransform()\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\tif (this.props.layer.getOptions().isSvg) {\n\t\t\treturn <S.SvgLayer style={this.getTransformStyle()}>{this.props.children}</S.SvgLayer>;\n\t\t}\n\t\treturn <S.DivLayer style={this.getTransformStyle()}>{this.props.children}</S.DivLayer>;\n\t}\n}\n","import * as React from 'react';\nimport { AbstractReactFactory, GenerateWidgetEvent } from '../../core/AbstractReactFactory';\nimport { SelectionLayerModel } from './SelectionLayerModel';\nimport { GenerateModelEvent } from '../../core/AbstractModelFactory';\nimport { SelectionBoxWidget } from './SelectionBoxWidget';\n\nexport class SelectionBoxLayerFactory extends AbstractReactFactory<SelectionLayerModel> {\n\tconstructor() {\n\t\tsuper('selection');\n\t}\n\n\tgenerateModel(event: GenerateModelEvent): SelectionLayerModel {\n\t\treturn new SelectionLayerModel();\n\t}\n\n\tgenerateReactWidget(event: GenerateWidgetEvent<SelectionLayerModel>): JSX.Element {\n\t\treturn <SelectionBoxWidget rect={event.model.box} />;\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nexport interface SelectionBoxWidgetProps {\n\trect: ClientRect;\n}\n\nnamespace S {\n\texport const Container = styled.div`\n\t\tposition: absolute;\n\t\tbackground-color: rgba(0, 192, 255, 0.2);\n\t\tborder: solid 2px rgb(0, 192, 255);\n\t`;\n}\n\nexport class SelectionBoxWidget extends React.Component<SelectionBoxWidgetProps> {\n\trender() {\n\t\tconst { rect } = this.props;\n\n\t\tif (!rect) return null;\n\n\t\treturn (\n\t\t\t<S.Container\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: rect.top,\n\t\t\t\t\tleft: rect.left,\n\t\t\t\t\twidth: rect.width,\n\t\t\t\t\theight: rect.height\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import { LayerModel } from '../layer/LayerModel';\nimport { FactoryBank } from '../../core/FactoryBank';\nimport { AbstractModelFactory } from '../../core/AbstractModelFactory';\nimport { BaseModel } from '../../core-models/BaseModel';\n\nexport class SelectionLayerModel extends LayerModel {\n\tbox: ClientRect;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\ttransformed: false,\n\t\t\tisSvg: false,\n\t\t\ttype: 'selection'\n\t\t});\n\t}\n\n\tsetBox(rect: ClientRect) {\n\t\tthis.box = rect;\n\t}\n\n\tgetChildModelFactoryBank(): FactoryBank<AbstractModelFactory<BaseModel>> {\n\t\t// is not used as it doesnt serialize\n\t\treturn null;\n\t}\n}\n","export * from './CanvasEngine';\nexport * from './Toolkit';\nexport * from './entities/canvas/CanvasModel';\n\nexport * from './core/AbstractFactory';\nexport * from './core/AbstractModelFactory';\nexport * from './core/AbstractReactFactory';\nexport * from './core/BaseObserver';\nexport * from './core/FactoryBank';\nexport * from './core/ModelGeometryInterface';\n\nexport * from './core-actions/Action';\nexport * from './core-actions/ActionEventBus';\n\nexport * from './core-models/BaseEntity';\nexport * from './core-models/BaseModel';\nexport * from './core-models/BasePositionModel';\n\nexport * from './entities/canvas/CanvasModel';\nexport * from './entities/canvas/CanvasWidget';\n\nexport * from './entities/layer/LayerModel';\nexport * from './entities/layer/TransformLayerWidget';\nexport * from './entities/layer/SmartLayerWidget';\n\nexport * from './entities/selection/SelectionBoxLayerFactory';\nexport * from './entities/selection/SelectionBoxWidget';\nexport * from './entities/selection/SelectionLayerModel';\n\nexport * from './widgets/PeformanceWidget';\n\nexport * from './core-state/AbstractDisplacementState';\nexport * from './core-state/State';\nexport * from './core-state/StateMachine';\n\nexport * from './states/DefaultState';\nexport * from './states/DragCanvasState';\nexport * from './states/SelectingState';\nexport * from './states/SelectionBoxState';\nexport * from './states/MoveItemsState';\n\nexport * from './actions/DeleteItemsAction';\nexport * from './actions/ZoomCanvasAction';\n","import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { MouseEvent, TouchEvent } from 'react';\nimport { DragCanvasState } from './DragCanvasState';\nimport { SelectingState } from './SelectingState';\nimport { MoveItemsState } from './MoveItemsState';\n\nexport class DefaultState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'default'\n\t\t});\n\t\tthis.childStates = [new SelectingState()];\n\n\t\t// determine what was clicked on\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// the canvas was clicked on, transition to the dragging canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.transitionWithEvent(new MoveItemsState(), event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// touch drags the canvas\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (event: ActionEvent<TouchEvent>) => {\n\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\n\nexport interface DragCanvasStateOptions {\n\t/**\n\t * If enabled, the canvas is available to drag\n\t */\n\tallowDrag?: boolean;\n}\n\nexport class DragCanvasState extends AbstractDisplacementState {\n\t// store this as we drag the canvas\n\tinitialCanvasX: number;\n\tinitialCanvasY: number;\n\tconfig: DragCanvasStateOptions;\n\n\tconstructor(options: DragCanvasStateOptions = {}) {\n\t\tsuper({\n\t\t\tname: 'drag-canvas'\n\t\t});\n\t\tthis.config = {\n\t\t\tallowDrag: true,\n\t\t\t...options\n\t\t};\n\t}\n\n\tasync activated(prev) {\n\t\tsuper.activated(prev);\n\t\tthis.engine.getModel().clearSelection();\n\t\tawait this.engine.repaintCanvas(true);\n\n\t\t// we can block layer rendering because we are only targeting the transforms\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\tlayer.allowRepaint(false);\n\t\t}\n\n\t\tthis.initialCanvasX = this.engine.getModel().getOffsetX();\n\t\tthis.initialCanvasY = this.engine.getModel().getOffsetY();\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\tlayer.allowRepaint(true);\n\t\t}\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tif (this.config.allowDrag) {\n\t\t\tthis.engine\n\t\t\t\t.getModel()\n\t\t\t\t.setOffset(this.initialCanvasX + event.displacementX, this.initialCanvasY + event.displacementY);\n\t\t\tthis.engine.repaintCanvas();\n\t\t}\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { BasePositionModel } from '../core-models/BasePositionModel';\nimport { Point } from '@projectstorm/geometry';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport class MoveItemsState<E extends CanvasEngine = CanvasEngine> extends AbstractDisplacementState<E> {\n\tinitialPositions: {\n\t\t[id: string]: {\n\t\t\tpoint: Point;\n\t\t\titem: BasePositionModel;\n\t\t};\n\t};\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'move-items'\n\t\t});\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!element.isSelected()) {\n\t\t\t\t\t\tthis.engine.getModel().clearSelection();\n\t\t\t\t\t}\n\t\t\t\t\telement.setSelected(true);\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.initialPositions = {};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tconst items = this.engine.getModel().getSelectedEntities();\n\t\tconst model = this.engine.getModel();\n\t\tfor (let item of items) {\n\t\t\tif (item instanceof BasePositionModel) {\n\t\t\t\tif (item.isLocked()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!this.initialPositions[item.getID()]) {\n\t\t\t\t\tthis.initialPositions[item.getID()] = {\n\t\t\t\t\t\tpoint: item.getPosition(),\n\t\t\t\t\t\titem: item\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst pos = this.initialPositions[item.getID()].point;\n\t\t\t\titem.setPosition(\n\t\t\t\t\tmodel.getGridPosition(pos.x + event.virtualDisplacementX),\n\t\t\t\t\tmodel.getGridPosition(pos.y + event.virtualDisplacementY)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n","import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SelectionBoxState } from './SelectionBoxState';\nimport { MouseEvent } from 'react';\n\nexport class SelectingState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selecting'\n\t\t});\n\t\tthis.keys = ['shift'];\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// go into a selection box on the canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new SelectionBoxState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setSelected(true);\n\t\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { SelectionLayerModel } from '../entities/selection/SelectionLayerModel';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport class SelectionBoxState extends AbstractDisplacementState {\n\tlayer: SelectionLayerModel;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selection-box'\n\t\t});\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.layer = new SelectionLayerModel();\n\t\tthis.engine.getModel().addLayer(this.layer);\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tthis.layer.remove();\n\t\tthis.engine.repaintCanvas();\n\t}\n\n\tgetBoxDimensions(event: AbstractDisplacementStateEvent): ClientRect {\n\t\tlet rel: Point;\n\n\t\tif ('touches' in event.event) {\n\t\t\tconst touch = event.event.touches[0];\n\t\t\trel = this.engine.getRelativePoint(touch.clientX, touch.clientY);\n\t\t} else {\n\t\t\trel = this.engine.getRelativePoint(event.event.clientX, event.event.clientY);\n\t\t}\n\n\t\treturn {\n\t\t\tleft: rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\ttop: rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n\t\t\twidth: Math.abs(rel.x - this.initialXRelative),\n\t\t\theight: Math.abs(rel.y - this.initialYRelative),\n\t\t\tright: rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\tbottom: rel.y < this.initialYRelative ? this.initialYRelative : rel.y\n\t\t};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tthis.layer.setBox(this.getBoxDimensions(event));\n\n\t\tconst relative = this.engine.getRelativeMousePoint({\n\t\t\tclientX: this.initialX,\n\t\t\tclientY: this.initialY\n\t\t});\n\t\tif (event.virtualDisplacementX < 0) {\n\t\t\trelative.x -= Math.abs(event.virtualDisplacementX);\n\t\t}\n\t\tif (event.virtualDisplacementY < 0) {\n\t\t\trelative.y -= Math.abs(event.virtualDisplacementY);\n\t\t}\n\t\tconst rect = new Rectangle(relative, Math.abs(event.virtualDisplacementX), Math.abs(event.virtualDisplacementY));\n\n\t\tfor (let model of this.engine.getModel().getSelectionEntities()) {\n\t\t\tif ((model as unknown as ModelGeometryInterface).getBoundingBox) {\n\t\t\t\tconst bounds = (model as unknown as ModelGeometryInterface).getBoundingBox();\n\t\t\t\tif (rect.containsPoint(bounds.getTopLeft()) && rect.containsPoint(bounds.getBottomRight())) {\n\t\t\t\t\tmodel.setSelected(true);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.setSelected(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport interface PeformanceWidgetProps {\n\tchildren: () => JSX.Element;\n\tserialized: object;\n\tmodel: BaseModel;\n}\n\nexport interface PeformanceWidgetState {}\n\nexport class PeformanceWidget extends React.Component<PeformanceWidgetProps, PeformanceWidgetState> {\n\tshouldComponentUpdate(\n\t\tnextProps: Readonly<PeformanceWidgetProps>,\n\t\tnextState: Readonly<PeformanceWidgetState>,\n\t\tnextContext: any\n\t): boolean {\n\t\tif (!this.props.model.performanceTune()) {\n\t\t\treturn true;\n\t\t}\n\t\t// deserialization event\n\t\tif (this.props.model !== nextProps.model) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// change event\n\t\treturn !_.isEqual(this.props.serialized, nextProps.serialized);\n\t}\n\n\trender() {\n\t\treturn this.props.children();\n\t}\n}\n","module.exports = require(\"@emotion/react\");","module.exports = require(\"@emotion/styled\");","module.exports = require(\"@projectstorm/geometry\");","module.exports = require(\"lodash\");","module.exports = require(\"react\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(418);\n"],"sourceRoot":""}