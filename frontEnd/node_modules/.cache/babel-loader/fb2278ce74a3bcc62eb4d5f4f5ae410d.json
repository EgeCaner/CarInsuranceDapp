{"ast":null,"code":"var _jsxFileName = \"/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/addCarWithInsurance.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet AlgoSigner;\nlet account;\nconst algodAddress = \"https://testnet.algoexplorerapi.io/\";\nconst algodToken = \"\";\nconst algodPort = \"\";\nlet algodClient = new algosdk.Algodv2(algodToken, algodAddress, algodPort);\nconst indexer_token = \"\";\nconst indexer_server = \"https://testnet.algoexplorerapi.io/idx2/\";\nconst indexer_port = 0;\nlet indexerClient = new algosdk.Indexer(indexer_token, indexer_server, indexer_port);\nvar check = algodClient.healthCheck().do();\n\nif (check) {\n  console.log(\"client connected\");\n}\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function AddCar() {\n  _s();\n\n  const classes = useStyles(); //States\n\n  const [carID, setCarID] = React.useState('');\n  const [carMake, setCarMake] = React.useState('');\n  const [carModel, setCarModel] = React.useState('');\n  const [carColor, setCarColor] = React.useState('');\n  const [carOwner, setCarOwner] = React.useState('');\n  const [carInsurance, setCarInsurance] = React.useState(''); //Handlers\n\n  const handleCarID = event => {\n    setCarID(event.target.value);\n  };\n\n  const handleCarModel = event => {\n    setCarModel(event.target.value);\n  };\n\n  const handleCarMake = event => {\n    setCarMake(event.target.value);\n  };\n\n  const handleCarColor = event => {\n    setCarColor(event.target.value);\n  };\n\n  const handleCarOwner = event => {\n    setCarOwner(event.target.value);\n  };\n\n  const handleCarInsurance = event => {\n    setCarInsurance(event.target.value);\n  };\n\n  const handleSubmit = async function () {\n    try {\n      // get node suggested parameters\n      let params = await algodClient.getTransactionParams().do(); // comment out the next two lines to use suggested fee\n\n      params.fee = 1000;\n      params.flatFee = true;\n      let appArg = [];\n      appArg.push(new Uint8Array(Buffer.from(\"createInsurance\")));\n      let appArr = [23658482]; // create unsigned transaction   [str:addCar, str:Skoda, str: ]\n      //let state= await client.accountInformation(account.addr).do()\n      //let txn = algosdk.makeApplicationOptInTxn(sender, params, index);\n\n      let txn_1 = algosdk.makeApplicationNoOpTxn(sender, params, 23196087, appArg, [creatorAccount.addr], appArr);\n      let appArgs = [];\n      appArgs.push(new Uint8Array(Buffer.from(\"addCar\")));\n      appArgs.push(new Uint8Array(Buffer.from(req.body.carID)));\n      appArgs.push(new Uint8Array(Buffer.from(req.body.carMake)));\n      appArgs.push(new Uint8Array(Buffer.from(req.body.carModel)));\n      appArgs.push(new Uint8Array(Buffer.from(req.body.carColor)));\n      let txn_2 = algosdk.makeApplicationNoOpTxn(sender, params, 23658482, appArgs);\n      let txns = [];\n      txns.push(txn_2);\n      txns.push(txn_1);\n      let txgroup = algosdk.assignGroupID(txns);\n      let signed = [];\n      signed.push(txgroup[0].signTxn(creatorAccount.sk));\n      signed.push(txgroup[1].signTxn(creatorAccount.sk));\n      let tx = await algodClient.sendRawTransaction(signed).do();\n      console.log(\"Transaction : \" + tx.txId);\n      await waitForConfirmation(algodClient, tx.txId);\n    } catch (error) {\n      console.log(`${RED}<-- Failed: AddCar - ${error}${RESET}`);\n      return 0;\n    }\n  };\n\n  const allData = () => {\n    return {\n      'carID': carID,\n      'carColor': carColor,\n      'carModel': carModel,\n      'carOwner': carOwner,\n      'carMake': carMake,\n      'carInsurance': carInsurance\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.margin,\n      id: \"input-with-icon-textfield\",\n      label: \"CarID\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)\n      },\n      onInput: handleCarID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.margin,\n      id: \"input-with-icon-textfield\",\n      label: \"Car Make\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)\n      },\n      onInput: handleCarMake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.margin,\n      id: \"input-with-icon-textfield\",\n      label: \"Car Model\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)\n      },\n      onInput: handleCarModel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.margin,\n      id: \"input-with-icon-textfield\",\n      label: \"Car Color\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)\n      },\n      onInput: handleCarColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.margin,\n      id: \"input-with-icon-textfield\",\n      label: \"Car Owner\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)\n      },\n      onInput: handleCarOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.margin,\n      id: \"input-with-icon-textfield\",\n      label: \"Car Insurance\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)\n      },\n      onInput: handleCarInsurance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCar, \"mBhjmDLvjqHGeks3J575yGNo4co=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddCar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCar\");","map":{"version":3,"sources":["/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/addCarWithInsurance.js"],"names":["React","makeStyles","InputAdornment","TextField","Button","AlgoSigner","account","algodAddress","algodToken","algodPort","algodClient","algosdk","Algodv2","indexer_token","indexer_server","indexer_port","indexerClient","Indexer","check","healthCheck","do","console","log","useStyles","theme","margin","spacing","AddCar","classes","carID","setCarID","useState","carMake","setCarMake","carModel","setCarModel","carColor","setCarColor","carOwner","setCarOwner","carInsurance","setCarInsurance","handleCarID","event","target","value","handleCarModel","handleCarMake","handleCarColor","handleCarOwner","handleCarInsurance","handleSubmit","params","getTransactionParams","fee","flatFee","appArg","push","Uint8Array","Buffer","from","appArr","txn_1","makeApplicationNoOpTxn","sender","creatorAccount","addr","appArgs","req","body","txn_2","txns","txgroup","assignGroupID","signed","signTxn","sk","tx","sendRawTransaction","txId","waitForConfirmation","error","RED","RESET","allData","startAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nlet AlgoSigner;\nlet account;\nconst algodAddress = \"https://testnet.algoexplorerapi.io/\";\nconst algodToken = \"\";\nconst algodPort =\"\";\n\nlet algodClient = new algosdk.Algodv2(algodToken, algodAddress, algodPort);\n\nconst indexer_token = \"\";\nconst indexer_server = \"https://testnet.algoexplorerapi.io/idx2/\";\nconst indexer_port = 0;\n\nlet indexerClient = new algosdk.Indexer(indexer_token, indexer_server, indexer_port);\n\nvar check =algodClient.healthCheck().do();\nif (check){\n    console.log(\"client connected\")\n}\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport default function AddCar() {\n    const classes = useStyles();\n\n    //States\n    const [carID, setCarID] = React.useState('')\n    const [carMake, setCarMake] = React.useState('')\n    const [carModel, setCarModel] = React.useState('')\n    const [carColor, setCarColor] = React.useState('')\n    const [carOwner, setCarOwner] = React.useState('')\n    const [carInsurance, setCarInsurance] = React.useState('')\n\n    //Handlers\n    const handleCarID = (event) => {\n        setCarID(event.target.value)\n    }\n\n    const handleCarModel = (event) => {\n        setCarModel(event.target.value)\n    }\n\n    const handleCarMake = (event) => {\n        setCarMake(event.target.value)\n    }\n\n    const handleCarColor = (event) => {\n        setCarColor(event.target.value)\n    }\n\n    const handleCarOwner = (event) => {\n        setCarOwner(event.target.value)\n    }\n\n    const handleCarInsurance = (event) => {\n        setCarInsurance(event.target.value)\n    }\n\n   const handleSubmit = async function () {\n        try{\n            // get node suggested parameters\n            let params = await algodClient.getTransactionParams().do();\n            // comment out the next two lines to use suggested fee\n            params.fee = 1000;\n            params.flatFee = true;\n            let appArg = [];\n            appArg.push(new Uint8Array(Buffer.from(\"createInsurance\")));\n            let appArr = [23658482]\n            // create unsigned transaction   [str:addCar, str:Skoda, str: ]\n            //let state= await client.accountInformation(account.addr).do()\n            //let txn = algosdk.makeApplicationOptInTxn(sender, params, index);\n            let txn_1 = algosdk.makeApplicationNoOpTxn(sender, params, 23196087, appArg,[creatorAccount.addr],appArr);\n            let appArgs = [];\n            appArgs.push(new Uint8Array(Buffer.from(\"addCar\")));\n            appArgs.push(new Uint8Array(Buffer.from(req.body.carID)));\n            appArgs.push(new Uint8Array(Buffer.from(req.body.carMake)));\n            appArgs.push(new Uint8Array(Buffer.from(req.body.carModel)));\n            appArgs.push(new Uint8Array(Buffer.from(req.body.carColor)));\n            let txn_2 = algosdk.makeApplicationNoOpTxn(sender, params, 23658482, appArgs);\n            let txns = []\n            txns.push(txn_2);\n            txns.push(txn_1);\n            let txgroup = algosdk.assignGroupID(txns);\n            let signed =[]\n            signed.push(txgroup[0].signTxn(creatorAccount.sk));\n            signed.push(txgroup[1].signTxn(creatorAccount.sk));\n            let tx = (await algodClient.sendRawTransaction(signed).do());\n            console.log(\"Transaction : \" + tx.txId);\n            await waitForConfirmation(algodClient, tx.txId)\n        }catch(error){\n            console.log(`${RED}<-- Failed: AddCar - ${error}${RESET}`);\n            return 0;\n        }\n    }\n\n    const allData = () => {\n        return {\n            'carID': carID,\n            'carColor': carColor,\n            'carModel': carModel,\n            'carOwner': carOwner,\n            'carMake': carMake,\n            'carInsurance': carInsurance,\n        }\n    }\n\n\n    return (\n        <div>\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"CarID\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handleCarID}\n            />\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Car Make\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handleCarMake}\n            />\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Car Model\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handleCarModel}\n            />\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Car Color\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handleCarColor}\n            />\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Car Owner\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handleCarOwner}\n            />\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Car Insurance\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handleCarInsurance}\n            />\n            <Button onClick={handleSubmit}>\n                Submit\n            </Button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}