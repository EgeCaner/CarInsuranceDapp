{"ast":null,"code":"var _jsxFileName = \"/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/allCars.js\";\nimport React, { Component } from 'react';\nimport Cards from '../components/cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst algosdk = require('algosdk');\n\nconst indexer_token = \"\";\nconst indexer_server = \"https://testnet.algoexplorerapi.io/idx2/\";\nconst indexer_port = 0;\nlet indexerClient = new algosdk.Indexer(indexer_token, indexer_server, indexer_port);\nlet car_app_id = 23658482;\n\nclass allCars extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      carList: []\n    };\n  }\n\n  getAllCars() {\n    let data = [];\n    (async () => {\n      let accountInfo = await indexerClient.searchAccounts().applicationID(car_app_id).do();\n      console.log(accountInfo);\n\n      for (let i = 0; i < accountInfo.accounts.length; i++) {\n        let address = accountInfo.accounts[i].address;\n\n        for (let j = 0; j < accountInfo.accounts[i]['apps-local-state'].length; j++) {\n          if (accountInfo.accounts[i]['apps-local-state'][j].id == car_app_id) {}\n        }\n      }\n    })().catch(e => {\n      console.log(e);\n      console.trace();\n    });\n  }\n\n  componentDidMount() {\n    this.getAllCars();\n  }\n\n  render() {\n    console.log(this.state.carList);\n    return /*#__PURE__*/_jsxDEV(Cards, {\n      carList: this.state.carList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default allCars;","map":{"version":3,"sources":["/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/allCars.js"],"names":["React","Component","Cards","algosdk","require","indexer_token","indexer_server","indexer_port","indexerClient","Indexer","car_app_id","allCars","state","carList","getAllCars","data","accountInfo","searchAccounts","applicationID","do","console","log","i","accounts","length","address","j","id","catch","e","trace","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,aAAa,GAAG,EAAtB;AACA,MAAMC,cAAc,GAAG,0CAAvB;AACA,MAAMC,YAAY,GAAG,CAArB;AAEA,IAAIC,aAAa,GAAG,IAAIL,OAAO,CAACM,OAAZ,CAAoBJ,aAApB,EAAmCC,cAAnC,EAAmDC,YAAnD,CAApB;AACA,IAAIG,UAAU,GAAG,QAAjB;;AACA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE5BW,KAF4B,GAEpB;AACJC,MAAAA,OAAO,EAAE;AADL,KAFoB;AAAA;;AAO5BC,EAAAA,UAAU,GAAE;AACR,QAAIC,IAAI,GAAG,EAAX;AACA,KAAC,YAAY;AACT,UAAIC,WAAW,GAAG,MAAMR,aAAa,CAACS,cAAd,GACnBC,aADmB,CACLR,UADK,EACOS,EADP,EAAxB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,WAAW,CAACO,QAAZ,CAAqBC,MAAzC,EAAiDF,CAAC,EAAlD,EAAsD;AAClD,YAAIG,OAAO,GAAGT,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwBG,OAAtC;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CE,MAAhE,EAAwEE,CAAC,EAAzE,EAA6E;AACzE,cAAGV,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CI,CAA5C,EAA+CC,EAA/C,IAAqDjB,UAAxD,EAAmE,CAElE;AACJ;AACJ;AACJ,KAZD,IAYKkB,KAZL,CAYWC,CAAC,IAAI;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACAT,MAAAA,OAAO,CAACU,KAAR;AACH,KAfD;AAgBH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKjB,UAAL;AACH;;AAEDkB,EAAAA,MAAM,GAAG;AACLZ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,OAAvB;AACA,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AApC2B;;AAuChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Cards from '../components/cards'\n\nconst algosdk = require('algosdk');\nconst indexer_token = \"\";\nconst indexer_server = \"https://testnet.algoexplorerapi.io/idx2/\";\nconst indexer_port = 0;\n\nlet indexerClient = new algosdk.Indexer(indexer_token, indexer_server, indexer_port);\nlet car_app_id = 23658482;\nclass allCars extends Component {\n\n    state = {\n        carList: []\n    }\n\n    \n    getAllCars(){\n        let data = [];\n        (async () => {\n            let accountInfo = await indexerClient.searchAccounts()\n                .applicationID(car_app_id).do();\n            console.log(accountInfo);\n            for (let i = 0; i < accountInfo.accounts.length; i++) {\n                let address = accountInfo.accounts[i].address;\n                for (let j = 0; j < accountInfo.accounts[i]['apps-local-state'].length; j++) {\n                    if(accountInfo.accounts[i]['apps-local-state'][j].id == car_app_id){\n                        \n                    }   \n                }\n            }\n        })().catch(e => {\n            console.log(e);\n            console.trace();\n        });\n    }\n\n    componentDidMount(){    \n        this.getAllCars()\n    }\n\n    render() {\n        console.log(this.state.carList)\n        return (\n            <Cards carList={this.state.carList} />\n        );\n    }\n}\n\nexport default allCars;"]},"metadata":{},"sourceType":"module"}