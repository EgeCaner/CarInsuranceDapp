{"ast":null,"code":"var _jsxFileName = \"/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/changeOwner.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst crypto = require('crypto');\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n})); // function hashPassPhrase(passPhrase) {\n//     const hash = crypto.createHash('sha256')\n//     hash.update(passPhrase)\n//     return hash.digest('hex')\n// }\n\nexport default function ChangeCarOwner() {\n  _s();\n\n  const classes = useStyles(); //States\n\n  const [carID, setCarID] = React.useState('');\n  const [newOwner, setNewOwner] = React.useState('');\n  const [passPhrase, setPassPhrase] = React.useState(''); //State Handlers\n\n  const handleCarID = event => {\n    setCarID(event.target.value);\n  };\n\n  const handleNewOwner = event => {\n    setNewOwner(event.target.value);\n  };\n\n  const handlePassPhrase = event => {\n    setPassPhrase(event.target.value);\n  };\n\n  const handleSubmit = async () => {\n    const apiUrl = `http://localhost:9000/api/changeowner`;\n    const fetchPromise = fetch(apiUrl, {\n      method: 'PUT',\n      mode: 'cors',\n      body: JSON.stringify(allData()),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    try {\n      const response = await fetchPromise;\n      const res = await response.json();\n\n      if (res.status == 200) {\n        toast.success(`Approved: ${res.message}`);\n      } else if (res.status == 403) {\n        toast.info(`Forbidden: ${res.message}`);\n      } else {\n        toast.error(`Error!!! ${res.message}`);\n      } // toast.success('New Car Added')\n\n    } catch (err) {\n      toast.error('Error!!! Failed to add Car', err);\n    }\n  };\n\n  const allData = () => {\n    return {\n      'carID': carID,\n      'carOwner': newOwner,\n      'passPhrase': passPhrase\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.margin,\n      id: \"input-with-icon-textfield\",\n      label: \"CarID\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      },\n      onInput: handleCarID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.margin,\n      id: \"input-with-icon-textfield\",\n      label: \"New Car Owner\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)\n      },\n      onInput: handleNewOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangeCarOwner, \"4+xGXy4SlWvNaAHL5CDF863dN8Y=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChangeCarOwner;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeCarOwner\");","map":{"version":3,"sources":["/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/changeOwner.js"],"names":["React","makeStyles","InputAdornment","Button","TextField","toast","crypto","require","useStyles","theme","margin","spacing","ChangeCarOwner","classes","carID","setCarID","useState","newOwner","setNewOwner","passPhrase","setPassPhrase","handleCarID","event","target","value","handleNewOwner","handlePassPhrase","handleSubmit","apiUrl","fetchPromise","fetch","method","mode","body","JSON","stringify","allData","headers","response","res","json","status","success","message","info","error","err","startAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Button } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField';\nimport {toast} from 'react-toastify'\nconst crypto = require('crypto')\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n}));\n\n// function hashPassPhrase(passPhrase) {\n//     const hash = crypto.createHash('sha256')\n//     hash.update(passPhrase)\n//     return hash.digest('hex')\n// }\n\nexport default function ChangeCarOwner() {\n    const classes = useStyles();\n\n    //States\n    const [carID, setCarID] = React.useState('')\n    const [newOwner, setNewOwner] = React.useState('')\n    const [passPhrase, setPassPhrase] = React.useState('')\n\n    //State Handlers\n    const handleCarID = (event) => {\n        setCarID(event.target.value)\n    }\n\n    const handleNewOwner = (event) => {\n        setNewOwner(event.target.value)\n    }\n\n    const handlePassPhrase = (event) => {\n        setPassPhrase(event.target.value)\n    }\n\n    const handleSubmit = async () => {\n        const apiUrl = `http://localhost:9000/api/changeowner`\n\n        const fetchPromise = fetch(apiUrl, {\n            method: 'PUT',\n            mode: 'cors',\n            body: JSON.stringify(allData()),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        try {\n            const response = await fetchPromise\n            const res = await response.json()\n\n            if (res.status == 200) {\n                toast.success(`Approved: ${res.message}`)\n            } else if(res.status == 403){\n                toast.info(`Forbidden: ${res.message}`)\n            } else {\n                toast.error(`Error!!! ${res.message}`)\n            }\n            // toast.success('New Car Added')\n        } catch (err) {\n            toast.error('Error!!! Failed to add Car', err)\n        }\n    }\n\n    const allData = () => {\n        return {\n            'carID': carID,\n            'carOwner': newOwner,\n            'passPhrase': passPhrase,\n        }\n    }\n\n    return (\n        <div>\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"CarID\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handleCarID}\n            />\n            <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"New Car Owner\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handleNewOwner}\n            />\n            {/* <TextField\n                className={classes.margin}\n                id=\"input-with-icon-textfield\"\n                label=\"Secret Pass Phrase\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                        </InputAdornment>\n                    ),\n                }}\n                onInput={handlePassPhrase}\n            /> */}\n            <Button onClick={handleSubmit}>\n                Submit\n            </Button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}