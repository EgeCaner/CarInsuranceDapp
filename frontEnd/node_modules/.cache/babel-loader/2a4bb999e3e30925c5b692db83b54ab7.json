{"ast":null,"code":"var _jsxFileName = \"/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/allCarInsurances.js\";\nimport React, { Component } from 'react';\nimport CardInsurance from '../components/cardInsurance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst algosdk = require('algosdk');\n\nconst indexer_token = \"\";\nconst indexer_server = \"https://testnet.algoexplorerapi.io/idx2/\";\nconst indexer_port = 0;\nlet indexerClient = new algosdk.Indexer(indexer_token, indexer_server, indexer_port);\nlet car_app_id = 25532407;\nlet insurance_app_id = 25540600;\n\nclass allCarInsurances extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      carList: []\n    };\n  }\n\n  async getAllCars() {\n    let data = [];\n    let check = false;\n\n    try {\n      let accountInfo = await indexerClient.searchAccounts().applicationID(insurance_app_id).do();\n\n      for (let i = 0; i < accountInfo.accounts.length; i++) {\n        let car = accountInfo.accounts[i].address;\n        let insuranceID;\n\n        for (let j = 0; j < accountInfo.accounts[i]['apps-local-state'].length; j++) {\n          if (accountInfo.accounts[i]['apps-local-state'][j].id == insurance_app_id && accountInfo.accounts[i]['apps-local-state'][j]['key-value'] != null && accountInfo.accounts[i]['apps-local-state'][j]['key-value'].length >= 1) {\n            insuranceID = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][0].value.bytes, 'base64').toString('ascii');\n            check = true;\n          }\n\n          if (accountInfo.accounts[i]['apps-local-state'][j].id == car_app_id && accountInfo.accounts[i]['apps-local-state'][j]['key-value'] != null && check && accountInfo.accounts[i]['apps-local-state'][j]['key-value'].length > 2) {\n            let color = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][0].value.bytes, 'base64').toString('ascii');\n            let make = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][1].value.bytes, 'base64').toString('ascii');\n            let model = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][2].value.bytes, 'base64').toString('ascii');\n            let owner = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][4].value.bytes, 'base64').toString('ascii');\n            data.push({\n              Key: car,\n              Record: {\n                owner: owner,\n                make: make,\n                model: model,\n                color: color,\n                insurance: insuranceID\n              }\n            });\n            check = false;\n          }\n        }\n      }\n    } catch (error) {\n      console.log(\"GetAllInsurance ---->\" + error);\n    }\n\n    this.setState({\n      carList: data\n    });\n  }\n\n  componentDidMount() {\n    this.getAllCars();\n  }\n\n  render() {\n    console.log(this.state.carList);\n    return /*#__PURE__*/_jsxDEV(CardInsurance, {\n      carInsList: this.state.carList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default allCarInsurances;","map":{"version":3,"sources":["/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/allCarInsurances.js"],"names":["React","Component","CardInsurance","algosdk","require","indexer_token","indexer_server","indexer_port","indexerClient","Indexer","car_app_id","insurance_app_id","allCarInsurances","state","carList","getAllCars","data","check","accountInfo","searchAccounts","applicationID","do","i","accounts","length","car","address","insuranceID","j","id","Buffer","value","bytes","toString","color","make","model","owner","push","Key","Record","insurance","error","console","log","setState","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardInsurance from '../components/cardInsurance';\nconst algosdk = require('algosdk');\nconst indexer_token = \"\";\nconst indexer_server = \"https://testnet.algoexplorerapi.io/idx2/\";\nconst indexer_port = 0;\n\nlet indexerClient = new algosdk.Indexer(indexer_token, indexer_server, indexer_port);\nlet car_app_id = 25532407;\nlet insurance_app_id = 25540600;\nclass allCarInsurances extends Component {\n\n    state = {\n        carList: []\n    }\n\n   async getAllCars(){\n        let data = [];\n        let check= false;\n        try {\n            let accountInfo = await indexerClient.searchAccounts()\n                .applicationID(insurance_app_id).do();\n            for (let i = 0; i < accountInfo.accounts.length; i++) {\n                let car = accountInfo.accounts[i].address;\n                let insuranceID;\n                for (let j = 0; j < accountInfo.accounts[i]['apps-local-state'].length; j++) {\n                    if(accountInfo.accounts[i]['apps-local-state'][j].id == insurance_app_id && accountInfo.accounts[i]['apps-local-state'][j]['key-value'] != null && accountInfo.accounts[i]['apps-local-state'][j]['key-value'].length >= 1){\n                        insuranceID =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][0].value.bytes, 'base64').toString('ascii');\n                        check = true;\n                    }\n                    if(accountInfo.accounts[i]['apps-local-state'][j].id == car_app_id && accountInfo.accounts[i]['apps-local-state'][j]['key-value'] != null && check &&accountInfo.accounts[i]['apps-local-state'][j]['key-value'].length > 2){    \n                        let color =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][0].value.bytes, 'base64').toString('ascii');    \n                        let make =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][1].value.bytes, 'base64').toString('ascii');    \n                        let model =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][2].value.bytes, 'base64').toString('ascii'); \n                        let owner =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][4].value.bytes, 'base64').toString('ascii');  \n                        data.push({Key:car, Record:{owner:owner , make:make, model:model, color:color, insurance: insuranceID}});\n                        check = false;\n                    }    \n                }\n            }    \n        } catch (error) {\n            console.log(\"GetAllInsurance ---->\" + error);\n        }\n        this.setState({carList: data});\n    }\n\n    componentDidMount(){    \n        this.getAllCars()\n    }\n\n    render() {\n        console.log(this.state.carList)\n        return (\n            <CardInsurance carInsList={this.state.carList} />\n        );\n    }\n}\n\nexport default allCarInsurances;"]},"metadata":{},"sourceType":"module"}