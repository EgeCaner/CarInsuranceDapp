{"ast":null,"code":"var _jsxFileName = \"/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/allCars.js\";\nimport React, { Component } from 'react';\nimport Cards from '../components/cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst algosdk = require('algosdk');\n\nconst indexer_token = \"\";\nconst indexer_server = \"https://testnet.algoexplorerapi.io/idx2/\";\nconst indexer_port = 0;\nlet indexerClient = new algosdk.Indexer(indexer_token, indexer_server, indexer_port);\nlet car_app_id = 23658482;\n\nclass allCars extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      carList: []\n    };\n  }\n\n  async getAllCars() {\n    let data = [];\n    let accountInfo = await indexerClient.searchAccounts().applicationID(car_app_id).do();\n    console.log(accountInfo);\n\n    for (let i = 0; i < accountInfo.accounts.length; i++) {\n      let owner = accountInfo.accounts[i].address;\n\n      for (let j = 0; j < accountInfo.accounts[i]['apps-local-state'].length; j++) {\n        if (accountInfo.accounts[i]['apps-local-state'][j].id == car_app_id) {\n          if (accountInfo.accounts[i]['apps-local-state'][j]['key-value'].length == 4) {\n            let color = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][0].value.bytes, 'base64').toString('ascii');\n            let make = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][1].value.bytes, 'base64').toString('ascii');\n            let model = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][2].value.bytes, 'base64').toString('ascii');\n            let Key = Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][3].value.bytes, 'base64').toString('ascii');\n            data.push({\n              record: {\n                owner,\n                key,\n                make,\n                model,\n                color\n              }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getAllCars();\n  }\n\n  render() {\n    console.log(this.state.carList);\n    return /*#__PURE__*/_jsxDEV(Cards, {\n      carList: this.state.carList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default allCars;","map":{"version":3,"sources":["/Users/egecaner/IDELTA/HyperLedgerPOC/POC/frontEnd/src/pages/allCars.js"],"names":["React","Component","Cards","algosdk","require","indexer_token","indexer_server","indexer_port","indexerClient","Indexer","car_app_id","allCars","state","carList","getAllCars","data","accountInfo","searchAccounts","applicationID","do","console","log","i","accounts","length","owner","address","j","id","color","Buffer","value","bytes","toString","make","model","Key","push","record","key","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,aAAa,GAAG,EAAtB;AACA,MAAMC,cAAc,GAAG,0CAAvB;AACA,MAAMC,YAAY,GAAG,CAArB;AAEA,IAAIC,aAAa,GAAG,IAAIL,OAAO,CAACM,OAAZ,CAAoBJ,aAApB,EAAmCC,cAAnC,EAAmDC,YAAnD,CAApB;AACA,IAAIG,UAAU,GAAG,QAAjB;;AACA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE5BW,KAF4B,GAEpB;AACJC,MAAAA,OAAO,EAAE;AADL,KAFoB;AAAA;;AAOb,QAAVC,UAAU,GAAE;AACb,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,WAAW,GAAG,MAAMR,aAAa,CAACS,cAAd,GACfC,aADe,CACDR,UADC,EACWS,EADX,EAAxB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,WAAW,CAACO,QAAZ,CAAqBC,MAAzC,EAAiDF,CAAC,EAAlD,EAAsD;AAClD,UAAIG,KAAK,GAAGT,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwBI,OAApC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CE,MAAhE,EAAwEG,CAAC,EAAzE,EAA6E;AACzE,YAAGX,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CK,CAA5C,EAA+CC,EAA/C,IAAqDlB,UAAxD,EAAmE;AAC/D,cAAGM,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CK,CAA5C,EAA+C,WAA/C,EAA4DH,MAA5D,IAAqE,CAAxE,EAA2E;AACvE,gBAAIK,KAAK,GAAEC,MAAM,CAACd,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CK,CAA5C,EAA+C,WAA/C,EAA4D,CAA5D,EAA+DI,KAA/D,CAAqEC,KAAtE,EAA6E,QAA7E,CAAN,CAA6FC,QAA7F,CAAsG,OAAtG,CAAX;AACA,gBAAIC,IAAI,GAAEJ,MAAM,CAACd,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CK,CAA5C,EAA+C,WAA/C,EAA4D,CAA5D,EAA+DI,KAA/D,CAAqEC,KAAtE,EAA6E,QAA7E,CAAN,CAA6FC,QAA7F,CAAsG,OAAtG,CAAV;AACA,gBAAIE,KAAK,GAAEL,MAAM,CAACd,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CK,CAA5C,EAA+C,WAA/C,EAA4D,CAA5D,EAA+DI,KAA/D,CAAqEC,KAAtE,EAA6E,QAA7E,CAAN,CAA6FC,QAA7F,CAAsG,OAAtG,CAAX;AACA,gBAAIG,GAAG,GAAEN,MAAM,CAACd,WAAW,CAACO,QAAZ,CAAqBD,CAArB,EAAwB,kBAAxB,EAA4CK,CAA5C,EAA+C,WAA/C,EAA4D,CAA5D,EAA+DI,KAA/D,CAAqEC,KAAtE,EAA6E,QAA7E,CAAN,CAA6FC,QAA7F,CAAsG,OAAtG,CAAT;AACAlB,YAAAA,IAAI,CAACsB,IAAL,CAAU;AAACC,cAAAA,MAAM,EAAC;AAACb,gBAAAA,KAAD;AAAQc,gBAAAA,GAAR;AAAaL,gBAAAA,IAAb;AAAmBC,gBAAAA,KAAnB;AAA0BN,gBAAAA;AAA1B;AAAR,aAAV;AACH;AACA;AACJ;AACJ;AACR;;AAEDW,EAAAA,iBAAiB,GAAE;AACf,SAAK1B,UAAL;AACH;;AAED2B,EAAAA,MAAM,GAAG;AACLrB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,OAAvB;AACA,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AArC2B;;AAwChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Cards from '../components/cards'\n\nconst algosdk = require('algosdk');\nconst indexer_token = \"\";\nconst indexer_server = \"https://testnet.algoexplorerapi.io/idx2/\";\nconst indexer_port = 0;\n\nlet indexerClient = new algosdk.Indexer(indexer_token, indexer_server, indexer_port);\nlet car_app_id = 23658482;\nclass allCars extends Component {\n\n    state = {\n        carList: []\n    }\n\n    \n   async getAllCars(){\n        let data = [];\n        let accountInfo = await indexerClient.searchAccounts()\n                .applicationID(car_app_id).do();\n        console.log(accountInfo);\n        for (let i = 0; i < accountInfo.accounts.length; i++) {\n            let owner = accountInfo.accounts[i].address;\n            for (let j = 0; j < accountInfo.accounts[i]['apps-local-state'].length; j++) {\n                if(accountInfo.accounts[i]['apps-local-state'][j].id == car_app_id){\n                    if(accountInfo.accounts[i]['apps-local-state'][j]['key-value'].length== 4) {\n                        let color =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][0].value.bytes, 'base64').toString('ascii');    \n                        let make =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][1].value.bytes, 'base64').toString('ascii');    \n                        let model =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][2].value.bytes, 'base64').toString('ascii');    \n                        let Key =Buffer(accountInfo.accounts[i]['apps-local-state'][j]['key-value'][3].value.bytes, 'base64').toString('ascii');    \n                        data.push({record:{owner ,key, make, model, color}});\n                    }\n                    }   \n                }\n            }\n    }\n\n    componentDidMount(){    \n        this.getAllCars()\n    }\n\n    render() {\n        console.log(this.state.carList)\n        return (\n            <Cards carList={this.state.carList} />\n        );\n    }\n}\n\nexport default allCars;"]},"metadata":{},"sourceType":"module"}